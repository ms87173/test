{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routes.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/constants/application-request.constants.ts","webpack:///./src/app/core/constants/constants.module.ts","webpack:///./src/app/core/constants/navigation.constants.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/index.ts","webpack:///./src/app/core/models/answer.ts","webpack:///./src/app/core/models/index.ts","webpack:///./src/app/core/models/ngx-formly-models.ts","webpack:///./src/app/core/models/option.ts","webpack:///./src/app/core/models/personal-info.interface.ts","webpack:///./src/app/core/models/question.ts","webpack:///./src/app/core/models/questionaire-delta-error.ts","webpack:///./src/app/core/models/questionaire-delta-question.ts","webpack:///./src/app/core/models/questionaire-delta-request.ts","webpack:///./src/app/core/models/questionaire-delta-response.ts","webpack:///./src/app/core/models/section.ts","webpack:///./src/app/core/models/task-request.ts","webpack:///./src/app/core/models/task.ts","webpack:///./src/app/core/models/user-info.interface.ts","webpack:///./src/app/core/services/api.service.ts","webpack:///./src/app/core/services/application-request.service.ts","webpack:///./src/app/core/services/applications.service.ts","webpack:///./src/app/core/services/authentication.service.ts","webpack:///./src/app/core/services/dynamic-options.service.ts","webpack:///./src/app/core/services/formly-fields.service.ts","webpack:///./src/app/core/services/index.ts","webpack:///./src/app/core/services/ngx-formly-parser.service.ts","webpack:///./src/app/core/services/questionnaire.service.ts","webpack:///./src/app/core/services/token.interceptor.ts","webpack:///./src/app/core/services/user-info.service.ts","webpack:///./src/app/core/services/window-ref.service.ts","webpack:///./src/app/core/utilities/application-request.utility.ts","webpack:///./src/app/custom-formly-fields/components/address-fields/address-fields.component.html","webpack:///./src/app/custom-formly-fields/components/address-fields/address-fields.component.scss","webpack:///./src/app/custom-formly-fields/components/address-fields/address-fields.component.ts","webpack:///./src/app/custom-formly-fields/components/address-proof/address-proof.component.html","webpack:///./src/app/custom-formly-fields/components/address-proof/address-proof.component.scss","webpack:///./src/app/custom-formly-fields/components/address-proof/address-proof.component.ts","webpack:///./src/app/custom-formly-fields/components/auto-complete/auto-complete.component.html","webpack:///./src/app/custom-formly-fields/components/auto-complete/auto-complete.component.scss","webpack:///./src/app/custom-formly-fields/components/auto-complete/auto-complete.component.ts","webpack:///./src/app/custom-formly-fields/components/checkbox/checkbox.component.html","webpack:///./src/app/custom-formly-fields/components/checkbox/checkbox.component.scss","webpack:///./src/app/custom-formly-fields/components/checkbox/checkbox.component.ts","webpack:///./src/app/custom-formly-fields/components/date-picker/date-picker.component.html","webpack:///./src/app/custom-formly-fields/components/date-picker/date-picker.component.scss","webpack:///./src/app/custom-formly-fields/components/date-picker/date-picker.component.ts","webpack:///./src/app/custom-formly-fields/components/dropdown/dropdown.component.html","webpack:///./src/app/custom-formly-fields/components/dropdown/dropdown.component.scss","webpack:///./src/app/custom-formly-fields/components/dropdown/dropdown.component.ts","webpack:///./src/app/custom-formly-fields/components/email/email.component.html","webpack:///./src/app/custom-formly-fields/components/email/email.component.scss","webpack:///./src/app/custom-formly-fields/components/email/email.component.ts","webpack:///./src/app/custom-formly-fields/components/phone/phone.component.html","webpack:///./src/app/custom-formly-fields/components/phone/phone.component.scss","webpack:///./src/app/custom-formly-fields/components/phone/phone.component.ts","webpack:///./src/app/custom-formly-fields/components/radiobutton/radiobutton.component.html","webpack:///./src/app/custom-formly-fields/components/radiobutton/radiobutton.component.scss","webpack:///./src/app/custom-formly-fields/components/radiobutton/radiobutton.component.ts","webpack:///./src/app/custom-formly-fields/components/textbox/textbox.component.html","webpack:///./src/app/custom-formly-fields/components/textbox/textbox.component.scss","webpack:///./src/app/custom-formly-fields/components/textbox/textbox.component.ts","webpack:///./src/app/custom-formly-fields/components/upload-file/upload-file.component.html","webpack:///./src/app/custom-formly-fields/components/upload-file/upload-file.component.scss","webpack:///./src/app/custom-formly-fields/components/upload-file/upload-file.component.ts","webpack:///./src/app/custom-formly-fields/custom-formly-fields.module.ts","webpack:///./src/app/custom-formly-fields/enums/custom-components.enum.ts","webpack:///./src/app/custom-formly-fields/formly-configs/address-fields-field-array.ts","webpack:///./src/app/custom-formly-fields/formly-configs/email-field-array.ts","webpack:///./src/app/custom-formly-fields/formly-configs/phone-field.config.ts","webpack:///./src/app/custom-formly-fields/pipes/select-options.pipe.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/questionnaire/questionnaire.component.html","webpack:///./src/app/questionnaire/questionnaire.component.scss","webpack:///./src/app/questionnaire/questionnaire.component.ts","webpack:///./src/app/section/section.component.css","webpack:///./src/app/section/section.component.html","webpack:///./src/app/section/section.component.ts","webpack:///./src/app/shared/card-body/card-body.component.html","webpack:///./src/app/shared/card-body/card-body.component.scss","webpack:///./src/app/shared/card-body/card-body.component.ts","webpack:///./src/app/shared/card-footer/card-footer.component.html","webpack:///./src/app/shared/card-footer/card-footer.component.scss","webpack:///./src/app/shared/card-footer/card-footer.component.ts","webpack:///./src/app/shared/card-header/card-header.component.html","webpack:///./src/app/shared/card-header/card-header.component.scss","webpack:///./src/app/shared/card-header/card-header.component.ts","webpack:///./src/app/shared/card/card.component.html","webpack:///./src/app/shared/card/card.component.scss","webpack:///./src/app/shared/card/card.component.ts","webpack:///./src/app/shared/contact-detail/contact-detail.component.html","webpack:///./src/app/shared/contact-detail/contact-detail.component.scss","webpack:///./src/app/shared/contact-detail/contact-detail.component.ts","webpack:///./src/app/shared/footer/footer.component.html","webpack:///./src/app/shared/footer/footer.component.scss","webpack:///./src/app/shared/footer/footer.component.ts","webpack:///./src/app/shared/grid/grid.component.html","webpack:///./src/app/shared/grid/grid.component.scss","webpack:///./src/app/shared/grid/grid.component.ts","webpack:///./src/app/shared/header/header.component.html","webpack:///./src/app/shared/header/header.component.scss","webpack:///./src/app/shared/header/header.component.ts","webpack:///./src/app/shared/label-value-group/label-value-group.component.html","webpack:///./src/app/shared/label-value-group/label-value-group.component.scss","webpack:///./src/app/shared/label-value-group/label-value-group.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/side-nav/side-nav.component.html","webpack:///./src/app/shared/side-nav/side-nav.component.scss","webpack:///./src/app/shared/side-nav/side-nav.component.ts","webpack:///./src/app/shared/tabs/tabs.component.html","webpack:///./src/app/shared/tabs/tabs.component.scss","webpack:///./src/app/shared/tabs/tabs.component.ts","webpack:///./src/app/shared/tile/tile.component.html","webpack:///./src/app/shared/tile/tile.component.scss","webpack:///./src/app/shared/tile/tile.component.ts","webpack:///./src/app/shared/top-nav/top-nav.component.html","webpack:///./src/app/shared/top-nav/top-nav.component.scss","webpack:///./src/app/shared/top-nav/top-nav.component.ts","webpack:///./src/app/store/actions/application.actions.ts","webpack:///./src/app/store/actions/index.ts","webpack:///./src/app/store/actions/questionnaire.actions.ts","webpack:///./src/app/store/actions/router.actions.ts","webpack:///./src/app/store/actions/user-info.actions.ts","webpack:///./src/app/store/actions/workflows.action.ts","webpack:///./src/app/store/app.store.module.ts","webpack:///./src/app/store/effects/application-request.effects.ts","webpack:///./src/app/store/effects/index.ts","webpack:///./src/app/store/effects/questionnaire-effects.service.ts","webpack:///./src/app/store/effects/router.effects.ts","webpack:///./src/app/store/effects/tasks.effects.ts","webpack:///./src/app/store/effects/user-info.effects.ts","webpack:///./src/app/store/effects/workflows.effects.ts","webpack:///./src/app/store/index.ts","webpack:///./src/app/store/reducers/application-request.reducer.ts","webpack:///./src/app/store/reducers/application.reducer.ts","webpack:///./src/app/store/reducers/index.ts","webpack:///./src/app/store/reducers/questionnaire.reducer.ts","webpack:///./src/app/store/reducers/user-info.reducer.ts","webpack:///./src/app/store/reducers/workflows.reducer.ts","webpack:///./src/app/store/selectors/application-request.selectors.ts","webpack:///./src/app/store/selectors/index.ts","webpack:///./src/app/store/selectors/questionnaire.selectors.ts","webpack:///./src/app/store/selectors/router.selectors.ts","webpack:///./src/app/store/selectors/user-info.selectors.ts","webpack:///./src/app/store/selectors/workflows.selectors.ts","webpack:///./src/app/storybook/formly-address-consumer/formly-address-consumer.component.html","webpack:///./src/app/storybook/formly-address-consumer/formly-address-consumer.component.scss","webpack:///./src/app/storybook/formly-address-consumer/formly-address-consumer.component.ts","webpack:///./src/app/storybook/formly-consumer/formly-consumer.component.html","webpack:///./src/app/storybook/formly-consumer/formly-consumer.component.scss","webpack:///./src/app/storybook/formly-consumer/formly-consumer.component.ts","webpack:///./src/app/storybook/formly-phone-consumer/formly-phone-consumer.component.css","webpack:///./src/app/storybook/formly-phone-consumer/formly-phone-consumer.component.html","webpack:///./src/app/storybook/formly-phone-consumer/formly-phone-consumer.component.ts","webpack:///./src/app/storybook/grid-consumer/grid-consumer.component.html","webpack:///./src/app/storybook/grid-consumer/grid-consumer.component.scss","webpack:///./src/app/storybook/grid-consumer/grid-consumer.component.ts","webpack:///./src/app/storybook/label-value-consumer/label-value-consumer.component.html","webpack:///./src/app/storybook/label-value-consumer/label-value-consumer.component.scss","webpack:///./src/app/storybook/label-value-consumer/label-value-consumer.component.ts","webpack:///./src/app/storybook/storybook-routing.module.ts","webpack:///./src/app/storybook/storybook.module.ts","webpack:///./src/app/storybook/storybook/storybook.component.html","webpack:///./src/app/storybook/storybook/storybook.component.scss","webpack:///./src/app/storybook/storybook/storybook.component.ts","webpack:///./src/app/storybook/tile-consumer/tile-consumer.component.html","webpack:///./src/app/storybook/tile-consumer/tile-consumer.component.scss","webpack:///./src/app/storybook/tile-consumer/tile-consumer.component.ts","webpack:///./src/app/task-container/task-container.component.css","webpack:///./src/app/task-container/task-container.component.html","webpack:///./src/app/task-container/task-container.component.ts","webpack:///./src/environments/environment.dev.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./ddo-application-request/ddo-application-request.module\": [\n\t\t\"./src/app/ddo-application-request/ddo-application-request.module.ts\",\n\t\t\"common\",\n\t\t\"ddo-application-request-ddo-application-request-module\"\n\t],\n\t\"./ddo-applications/ddo-applications.module\": [\n\t\t\"./src/app/ddo-applications/ddo-applications.module.ts\",\n\t\t\"common\",\n\t\t\"ddo-applications-ddo-applications-module\"\n\t],\n\t\"./storybook/storybook.module\": [\n\t\t\"./src/app/storybook/storybook.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nexport const AppRoutes: Routes = [\r\n    {\r\n        path: 'ddo',\r\n        component: HomeComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                pathMatch: 'full',\r\n                redirectTo: 'my-applications'\r\n            },\r\n            {\r\n                path: 'storybook',\r\n                loadChildren: './storybook/storybook.module#StorybookModule'\r\n            },\r\n            {\r\n                path: 'my-applications',\r\n                loadChildren: './ddo-applications/ddo-applications.module#DdoApplicationsModule'\r\n            },\r\n            {\r\n                path: 'applications/:applicationId',\r\n                loadChildren: './ddo-application-request/ddo-application-request.module#DdoApplicationRequestModule'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: 'ddo'\r\n    }\r\n    \r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppRoutes } from './app-routes';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(AppRoutes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport * as fromApp from './store/reducers';\r\nimport * as userActions from './store/actions/user-info.actions';\r\nimport { Store, select } from '@ngrx/store';\r\nimport * as fromUserSelectors from './store/selectors/user-info.selectors';\r\nimport { AuthenticationService } from './core/services/authentication.service';\r\nimport { WindowRef } from './core/services/window-ref.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n  constructor(\r\n    private store: Store<fromApp.AppState>,\r\n    private auth: AuthenticationService,\r\n    private winRef: WindowRef\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.auth.setToken();\r\n    this.store.dispatch(new userActions.GetUser());\r\n    // this.store.dispatch(new applicationRequestActions.GetApplicationRequest());\r\n    this.store.dispatch(new userActions.GetUserContactPerson());\r\n    this.store.pipe(select(fromUserSelectors.getUserState))\r\n      .subscribe((user) => {\r\n      });\r\n      //TODO: Mohammad to place in view code here.\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { CoreModule } from './core/core.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpModule } from '@angular/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthenticationService } from './core/services/authentication.service';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { AppStoreModule } from './store/app.store.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TokenInterceptor } from './core/services/token.interceptor';\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\r\nimport { WindowRef } from './core/services/window-ref.service';\r\nimport { CustomFormlyFieldsModule } from './custom-formly-fields/custom-formly-fields.module';\r\nimport { StorybookModule } from './storybook/storybook.module';\r\nimport { FormlyFieldsService } from './core/services/formly-fields.service';\r\n// import { UploadFileComponent } from './custom-formly-fields/components/upload-file/upload-file.component';\r\n\r\n  @NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n  ],\r\n  imports: [\r\n    AngularFontAwesomeModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    SharedModule,\r\n    CoreModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n    AppStoreModule,\r\n    CustomFormlyFieldsModule,\r\n    StorybookModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [\r\n    AuthenticationService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    },\r\n    WindowRef,\r\n    FormlyFieldsService \r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export const APPLICATION_HEADING = {\r\n    joint: 'Joint Account Application'\r\n};\r\n\r\nexport const TASK_STATUSES = {\r\n    inProgress: 'IN_PROGRESS',\r\n    completed: 'COMPLETED',\r\n    disabled: 'DISABLED'\r\n};\r\nexport const TASK_TYPES = {\r\n    QUESTION: 'questionnaire'\r\n};\r\n\r\nexport const QUESTIONS_TYPE = {\r\n    phone: 'custom-phone'\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class ConstantsModule { }\r\n","export const TOP_NAVIGATION =\r\n    [\r\n        {\r\n            'id': 'info',\r\n            'title': 'Important Info',\r\n            'routeLink': '',\r\n            'iconClass': '',\r\n            'children': ''\r\n        },\r\n        {\r\n            'id': 'star',\r\n            'title': '',\r\n            'routeLink': '',\r\n            'iconClass': 'fa-star-o',\r\n            'children': ''\r\n        },\r\n        {\r\n            'id': 'notification',\r\n            'title': '',\r\n            'routeLink': '',\r\n            'iconClass': 'fa-bell-o',\r\n            'children': ''\r\n        },\r\n        {\r\n            'id': 'dropdown',\r\n            'title': 'Hello Jennifer',\r\n            'routeLink': '',\r\n            'iconClass': '',\r\n            'children': [\r\n            ]\r\n        }\r\n    ];","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ConstantsModule } from './constants/constants.module';\r\nimport { ApiService, UserInfoService, QuestionnaireService } from './services';\r\nimport { NgxFormlyParserService } from './services/ngx-formly-parser.service';\r\nimport { ApplicationsService } from './services/applications.service';\r\nimport { ApplicationRequestService } from './services/application-request.service';\r\nimport { DynamicOptionsService } from './services/dynamic-options.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ConstantsModule,\r\n  ],\r\n  providers: [\r\n    ApiService,\r\n    NgxFormlyParserService,\r\n    ApiService,\r\n    UserInfoService,\r\n    QuestionnaireService,\r\n    ApplicationsService,\r\n    ApplicationRequestService,\r\n    DynamicOptionsService\r\n  ],\r\n  exports:[]\r\n})\r\n\r\nexport class CoreModule { }","export * from './core.module';\r\nexport * from './models';\r\nexport * from './services';\r\n","export class Answer {\r\n    value: any\r\n}","export * from './option';\r\nexport * from './question';\r\nexport * from './questionaire-delta-error';\r\nexport * from './questionaire-delta-question';\r\nexport * from './questionaire-delta-request';\r\nexport * from './questionaire-delta-response';\r\nexport * from './section';\r\nexport * from './task';\r\nexport * from './ngx-formly-models';\r\nexport * from \"./task-request\";\r\nexport * from './answer';\r\n\r\n","import { FormlyFieldConfig } from \"@ngx-formly/core\";\r\n\r\nexport class FormlyFieldConfigArrayCollection {\r\n    title?:string;\r\n    formlyFieldConfigs: FormlyFieldConfig[];\r\n    constructor(formlyFieldConfigs: FormlyFieldConfig[], title:string=\"\") {\r\n        this.formlyFieldConfigs = formlyFieldConfigs;\r\n        this.title=title;\r\n    }\r\n\r\n\r\n}\r\n","export class Option{\r\n    label:string;\r\n    value:string;\r\n}","export interface PersonalInfoInterface {\r\n    firstName: string;\r\n    lastName: string;\r\n    middleName: string;\r\n    email: string;\r\n    contactNumber: string;\r\n}\r\n\r\nexport class PersonalInfoModel implements PersonalInfoInterface {\r\n    firstName;\r\n    lastName;\r\n    middleName;\r\n    email;\r\n    contactNumber;\r\n    constructor(data) {\r\n        if (!data) {\r\n            return null;\r\n        }\r\n        this.firstName = data.firstName;\r\n        this.lastName = data.lastName;\r\n        this.middleName = data.middleName;\r\n        this.email = data.email;\r\n        this.contactNumber = data.contactNumber;\r\n    }\r\n}","import { Option } from './option';\r\nimport { Answer } from './answer';\r\n\r\nexport class Question {\r\n    id: string;\r\n    label: string;\r\n    type: string;\r\n    tooltipText?: string;\r\n    defaultValue: any;\r\n    required?: boolean;\r\n    readOnly?: boolean;\r\n    placeHolder: string;\r\n    options?: Option[];\r\n    serverErrorMessage?: string;\r\n    minLength?: number;\r\n    maxLength?: number;\r\n    max?: number;\r\n    min?: number;\r\n    disabled?: boolean = false;\r\n    recurrent: boolean= false;\r\n    answers: Answer[] = []\r\n\r\n\r\n}\r\n\r\n\r\n","export class QuestionaireDeltaError {\r\n    id:string;\r\n    sectionName:string;\r\n    errorMessage:string;\r\n}\r\n","import { Option } from './option';\r\n\r\nexport class QuestionaireDeltaQuestion {\r\n    \r\n    id:string;\r\n    label:string;\r\n    type:string;\r\n    required:boolean;\r\n    readOnly:boolean;\r\n    placeHolder:string;\r\n    options:Option[];  \r\n    tooltipText:string;\r\n    defaultValue:any;\r\n    sectionName:string;\r\n    ///To be null in case Delta Type Update and delete\r\n    questionIdAfterToBeInserted:string;\r\n\r\n    \r\n    \r\n}\r\n","import { Answer } from \"./answer\";\r\n\r\nexport class QuestionaireDeltaRequest {\r\n  requestId: string;\r\n  workflowId: string;\r\n  taskId: string;\r\n  questionnaireItems:QuestionnaireItem[]\r\n \r\n}\r\nexport class QuestionnaireItem{\r\n  id: string;\r\n  type: string;\r\n  answers:Answer[]\r\n}\r\n","import { QuestionaireDeltaQuestion } from './questionaire-delta-question';\r\nimport { QuestionaireDeltaError } from './questionaire-delta-error';\r\n\r\nexport class QuestionaireDeltaResponse {\r\n    new:QuestionaireDeltaQuestion[];\r\n    update:QuestionaireDeltaQuestion[];\r\n    delete:QuestionaireDeltaQuestion[];\r\n    errors:QuestionaireDeltaError[]\r\n}\r\n","import { Question } from './question';\r\n\r\nexport class Section{\r\n    // ToDo: May need to do for custom type\r\n    // id:string;\r\n\r\n    title: string;\r\n    questions:Question[]\r\n}","export class TaskRequest {\r\n    requestId: string;\r\n    workflowId: string\r\n    taskId: string;\r\n    constructor(){\r\n        \r\n    }\r\n}","import { Section } from './section';\r\n\r\nexport class Task {\r\n    label: string;\r\n    description: string;\r\n    id: string;\r\n    status:string;\r\n    sections:Section [];\r\n\r\n    constructor(){\r\n        \r\n    }\r\n    \r\n}\r\n","import { PersonalInfoInterface, PersonalInfoModel } from './personal-info.interface';\r\n\r\nexport interface UserInfoInterface {\r\n    personalInfo: PersonalInfoInterface;\r\n    role: string;\r\n    entitlements: Array<any>\r\n}\r\n\r\nexport class UserInfoModel implements UserInfoInterface {\r\n    role;\r\n    personalInfo;\r\n    entitlements;\r\n    constructor(data) {\r\n        if(!data) {\r\n            return null;\r\n        }\r\n            this.role = data.role;\r\n            this.personalInfo = new PersonalInfoModel(data.personalInfo);\r\n            this.entitlements = data.entitlements;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment.dev';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  private handleError(error: any) {\r\n    return Observable.throw(error);\r\n  }\r\n\r\n  get(url: string, httpParams: HttpParams = new HttpParams()): Observable<any> {\r\n\r\n    return this.http.get(`${environment.apiUrl}${url}`, { params: httpParams })\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  put(path: string, body: Object = {}): Observable<any> {\r\n    return this.http.put(\r\n      `${environment.apiUrl}${path}`,\r\n      JSON.stringify(body)\r\n    ).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  post(path: string, body: Object = {}): Observable<any> {\r\n    return this.http.post(\r\n      `${environment.apiUrl}${path}`,\r\n      JSON.stringify(body)\r\n    ).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  delete(path): Observable<any> {\r\n    return this.http.delete(\r\n      `${environment.apiUrl}${path}`\r\n    ).pipe(catchError(this.handleError));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable()\r\nexport class ApplicationRequestService {\r\n    constructor(private apiService: ApiService) { }\r\n    getApplicationRequest(requestId: string): Observable<any> {\r\n\r\n        //Todo: Production Url\r\n        return this.apiService.post('api/ddo/request/details', { requestId });\r\n        // return this.apiService.get('request');\r\n    }\r\n    getApplicationRequestWorkflows(requestId: string): Observable<any[]> {\r\n        //Todo: Production Url\r\n        return this.apiService.post('api/ddo/request/workflowsAndTasks', { requestId });\r\n        // return this.apiService.get('workflows');\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable()\r\nexport class ApplicationsService {\r\n  constructor(private apiService: ApiService) { }\r\n  getApplications(): Observable<any[]> {\r\n\r\n    ///Todo : Production Url\r\n     return this. apiService.get(\"api/ddo/request/all\");\r\n    // return this.apiService.get('requests');\r\n  }\r\n  //TODO: remove this as we are doing sorting on our end\r\n  sortApplications(orderBy: string): Observable<any> {\r\n    // return this.apiService.get(`requests?orderBy=${orderBy}`);\r\n    return this.apiService.get('sortRequests');\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n    //MOCK authentication service\r\n    public getToken(): any {\r\n        return 'KERMIT COBLEAD';\r\n    }\r\n    public setToken() {\r\n        document.cookie = 'userId=KERMIT COBLEAD';\r\n        return null;\r\n    }\r\n    public clearToken() {\r\n        document.cookie = '';\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable()\r\n export class DynamicOptionsService {\r\n  constructor(private apiService: ApiService) { }\r\n  getDynamicOptions(param: string): Observable<any[]> {\r\n    //TODO: need to implement against a param value\r\n    return this.apiService.get('static-options');\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { fromRootReducers } from '../../store';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { FormlyLifeCycleOptions } from '@ngx-formly/core/lib/components/formly.field.config';\r\nimport { questionnaireActions } from '../../store/actions';\r\nimport { QuestionaireDeltaRequest } from '../models';\r\nimport { CustomComponentsEnum } from '../../custom-formly-fields/enums/custom-components.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormlyFieldsService {\r\n\r\n\r\n  getFormlyLifeCycleEventByQuestionType(questionType: string, requestId: string,\r\n    workflowId: string, taskId: string): FormlyLifeCycleOptions {\r\n\r\n    switch (questionType) {\r\n      ///Todo Add Custom LifeCycle events custom compound type\r\n      case CustomComponentsEnum.CUSTOM_PHONE:\r\n      case CustomComponentsEnum.CUSTOM_ADDRESS_PROOF:\r\n        return null;\r\n      case CustomComponentsEnum.CUSTOM_EMAIL:\r\n        const EMAIL_LIFECYCLE_EVENT: FormlyLifeCycleOptions = {\r\n          onInit: (form?: FormGroup, field?: FormlyFieldConfig, model?: any, options?: FormlyFormOptions) => {\r\n            const key = field.key;\r\n            const formObj = form.get(key);\r\n            const requiredFields = field.fieldArray.fieldGroup.map(item => {\r\n              if (item.templateOptions.required) {\r\n                return item.key\r\n              }\r\n            });\r\n            console.log(\"requiredFields\");\r\n            console.log(requiredFields);\r\n\r\n\r\n            formObj.valueChanges\r\n              .pipe(debounceTime(600))\r\n              //Todo: To be Decided\r\n              .subscribe((fieldValue) => {\r\n                console.log(fieldValue);\r\n              });\r\n\r\n          }\r\n\r\n        };\r\n        return EMAIL_LIFECYCLE_EVENT;\r\n      default:\r\n        const GENERIC_LIFECYCLE_EVENT: FormlyLifeCycleOptions =\r\n        {\r\n          onInit: (form?: FormGroup, field?: FormlyFieldConfig, model?: any, options?: FormlyFormOptions) => {\r\n            let key = field.key;\r\n            let formObj = form.get(key);\r\n            formObj.valueChanges\r\n              .pipe(debounceTime(600))\r\n              //Todo: To be Decided\r\n              .subscribe((fieldValue) => {\r\n                let questionaireRequest: QuestionaireDeltaRequest = {\r\n                  requestId: requestId,\r\n                  workflowId: workflowId,\r\n                  taskId: taskId,\r\n                  questionnaireItems: [{\r\n\r\n                    id: key,\r\n                    type: questionType,\r\n                    answers:[\r\n                      {\r\n                        value:fieldValue\r\n                      }\r\n                    ]\r\n                  }]\r\n                };\r\n                // this.store.dispatch(new questionnaireActions.DeleteQuestionnaireErrorByQuestionId(key));\r\n                this.store.dispatch(new questionnaireActions.SetCurrentQuestionId(key));\r\n                this.store.dispatch(new questionnaireActions.GetCurrentFieldChangeDelta(questionaireRequest));\r\n              });\r\n          }\r\n        }\r\n        return GENERIC_LIFECYCLE_EVENT;\r\n    }\r\n\r\n  }\r\n  constructor(private store: Store<fromRootReducers.AppState>) {\r\n\r\n  }\r\n}\r\n","export * from './api.service';\r\nexport * from './user-info.service';\r\nexport * from './questionnaire.service';\r\nexport  * from './ngx-formly-parser.service';\r\nexport * from './application-request.service';\r\nexport * from './applications.service';","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\r\nimport { Section } from '../models/section';\r\nimport { Question } from '../models/question';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormlyLifeCycleOptions } from '@ngx-formly/core/lib/components/formly.field.config';\r\nimport { QuestionaireDeltaResponse } from '../models/questionaire-delta-response';\r\nimport * as _ from 'lodash';\r\nimport { Store } from '@ngrx/store';\r\nimport { fromRootReducers } from '../../store';\r\nimport { Task, FormlyFieldConfigArrayCollection, Answer } from '../models';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { CustomComponentsEnum } from '../../custom-formly-fields/enums/custom-components.enum';\r\nimport { emailFieldArray } from '../../custom-formly-fields/formly-configs/email-field-array';\r\nimport { FormlyFieldsService } from './formly-fields.service';\r\nimport { PhoneFieldConfig } from '../../custom-formly-fields/formly-configs/phone-field.config';\r\nimport { AddressFieldsFieldArray } from '../../custom-formly-fields/formly-configs/address-fields-field-array';\r\n\r\n@Injectable()\r\nexport class NgxFormlyParserService {\r\n  /// Todo: Waiting for client Store module. \r\n  /// this should be handled in a property from state\r\n  public currentQuestionId: string = null;\r\n  public fieldChangeObj = null;\r\n\r\n  // private fieldChangeLifecycleTrigger: FormlyLifeCycleOptions = \r\n  // {\r\n  //   onInit: (form?: FormGroup, field?: FormlyFieldConfig, model?: any, options?: FormlyFormOptions) => {\r\n  //     let key = field.key;\r\n  //     let formObj = form.get(key);\r\n\r\n  //     formObj.valueChanges\r\n  //       .pipe(debounceTime(600))\r\n  //       //Todo: To be Decided\r\n  //       .subscribe((fieldValue) => {\r\n  //         console.log(\"field changes occured\")\r\n  //         console.log(fieldValue);\r\n  //         console.log(field.defaultValue);\r\n  //         // this.currentQuestionId = key;\r\n  //         // let questionaireRequest: QuestionaireDeltaRequest = {\r\n  //         //   id: key,\r\n  //         //   value: fieldValue\r\n  //         // };\r\n  //         // this.store.dispatch(new questionnaireActions.DeleteQuestionnaireErrorByQuestionId(this.currentQuestionId));\r\n  //         // this.store.dispatch(new questionnaireActions.GetCurrentFieldChangeDelta(questionaireRequest));\r\n  //       });\r\n  //   }\r\n  // }\r\n  // getfieldChange() {\r\n  //   return of(this.fieldChangeObj);\r\n  // }\r\n\r\n  // getFormlyFieldConfigFromTask(currentTask: Task, currentQuestionId: string): Observable<FormlyFieldConfig[]> {\r\n  //   let currentConfig: FormlyFieldConfig = {\r\n  //   };\r\n\r\n  //   currentTask.sections.map((section: Section) => {\r\n  //     // currentConfig.key = section.id;\r\n  //     currentConfig.wrappers = ['form-group'];\r\n  //     currentConfig.templateOptions = {\r\n  //       label: section.title\r\n  //     };\r\n  //     let fieldGroup: FormlyFieldConfig[] = [];\r\n  //     section.questions.map((question: Question) => {\r\n  //       let field: FormlyFieldConfig = {};\r\n  //       if (question.id == currentQuestionId) {\r\n\r\n  //         field.focus = true;\r\n  //       }\r\n\r\n  //       field.key = question.id;\r\n  //       field.type = question.type;\r\n  //       field.lifecycle = this.fieldChangeLifecycleTrigger;\r\n\r\n  //       field.templateOptions = {\r\n  //         label: question.label,\r\n  //         options: question.options,\r\n  //         required: question.required,\r\n  //       };\r\n\r\n  //       if (question.serverErrorMessage) {\r\n  //         field.validators = {\r\n  //           ip: {\r\n  //             expression: (c) => true,\r\n  //             message: (error, field: FormlyFieldConfig) => question.serverErrorMessage,\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //       ////Todo:Find Immutable way\r\n  //       fieldGroup.push(field);\r\n  //     });\r\n  //     currentConfig.fieldGroup = fieldGroup;\r\n  //   });\r\n  //   return of([currentConfig]);\r\n  // }\r\n\r\n  // ///Todo: Change it to call delta from  server\r\n\r\n  // mergeFieldChangeDeltaAndCurrentcurrentTask(currentTask: Task, delta: QuestionaireDeltaResponse, model: any): Observable<Task> {\r\n\r\n  //   let currTask = { ...currentTask };\r\n  //   if (delta) {\r\n\r\n  //     if (delta.delete) {\r\n  //       let modelProperties = _.keys(model);\r\n\r\n  //       delta.delete.forEach((question) => {\r\n  //         let currentSection = currTask.sections.find((section) => {\r\n  //           return section.title == question.sectionName;\r\n  //         });\r\n\r\n  //         currentSection.questions = currentSection.questions\r\n  //           .filter((questionItem) => {\r\n  //             return questionItem.id !== question.id\r\n  //           });\r\n\r\n  //         if (modelProperties.find((modelproperty) => { return modelproperty == question.id; })) {\r\n  //           delete model[question.id];\r\n  //         }\r\n  //       });\r\n  //     }\r\n\r\n  //     ////Todo: Update Loop for delta\r\n\r\n  //     if (delta.new) {\r\n  //       delta.new.forEach((question) => {\r\n  //         let currentSection = currTask.sections.find((section) => {\r\n  //           return section.title === question.sectionName;\r\n  //         });\r\n  //         let currentQuestionIndex = currentSection.questions.findIndex((questioItem) => {\r\n  //           return questioItem.id == question.questionIdAfterToBeInserted;\r\n  //         });\r\n\r\n  //         let newQuestion: Question = {\r\n  //           id: question.id,\r\n  //           defaultValue: question.defaultValue,\r\n  //           label: question.label,\r\n  //           options: question.options,\r\n  //           placeHolder: question.placeHolder,\r\n  //           readOnly: question.readOnly,\r\n  //           required: question.required,\r\n  //           tooltipText: question.tooltipText,\r\n  //           type: question.type\r\n  //         }\r\n  //         if (currentSection.questions.findIndex((questioItem) => { return questioItem.id == question.id }) == -1)\r\n  //           currentSection.questions.splice(currentQuestionIndex + 1, 0, newQuestion);\r\n  //       });\r\n  //     }\r\n\r\n  //     ////Todo:Error loop for delta\r\n\r\n  //     if (delta.errors) {\r\n  //       delta.errors.forEach((error) => {\r\n  //         let currentSection = currTask.sections.find((section) => {\r\n  //           return section.title === error.sectionName;\r\n  //         });\r\n  //         let currentQuestion = currentSection.questions.find((questionItem) => {\r\n  //           return questionItem.id == error.id;\r\n  //         });\r\n  //         currentQuestion.serverErrorMessage = error.errorMessage;\r\n  //       });\r\n  //     }\r\n  //   }\r\n  //   return of(currTask);\r\n  // }\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  getFormlyFieldConfigArrayCollectionFromTask(currentTask: Task, currentQuestionId: string,\r\n    requestId: string, workflowId: string, taskId: string): Observable<FormlyFieldConfigArrayCollection[]> {\r\n    const formlyFieldConfigArrayCollections: FormlyFieldConfigArrayCollection[] = [];\r\n    const currTask = { ...currentTask };\r\n    currTask.sections.map((section: Section) => {\r\n      const FormlyFieldConfigArray: FormlyFieldConfig[] =\r\n        this.getFormlyFieldConfigArrayFromSection(section, currentQuestionId, requestId, workflowId, taskId);\r\n      const formlyFieldConfigArray: FormlyFieldConfigArrayCollection =\r\n        new FormlyFieldConfigArrayCollection(FormlyFieldConfigArray, section.title);\r\n      formlyFieldConfigArrayCollections.push(formlyFieldConfigArray);\r\n    });\r\n    return of(formlyFieldConfigArrayCollections);\r\n  }\r\n\r\n  getFormlyFieldConfigArrayFromSection(currentSection: Section, currentQuestionId: string,\r\n    requestId: string, workflowId: string, taskId: string): FormlyFieldConfig[] {\r\n    let FormlyFieldConfigArray: FormlyFieldConfig[] = [];\r\n    let currSection = { ...currentSection };\r\n    currSection.questions.map((question: Question) => {\r\n      let field: FormlyFieldConfig = {};\r\n      field.key = question.id.toString();\r\n      if (field.key == currentQuestionId) {\r\n        field.focus = true;\r\n      }\r\n      field.type = question.type;\r\n      field.lifecycle = this.formlyFieldsService\r\n        .getFormlyLifeCycleEventByQuestionType(field.type, requestId, workflowId, taskId);\r\n      field.templateOptions = {\r\n        label: question.label || \"\",\r\n        options: question.options || [],\r\n        required: question.required || false,\r\n        disabled: question.disabled || false,\r\n        recurrent: question.recurrent || false\r\n\r\n      };\r\n\r\n      if (question.answers && question.answers.length > 0) {\r\n        field = this.setDefaultValuesFromAnswers(question.answers, field, question.recurrent)\r\n      console.log(question.answers)\r\n      }\r\n\r\n    \r\n\r\n      if (question.max) {\r\n        field.templateOptions.max = question.max;\r\n      }\r\n      if (question.maxLength) {\r\n        field.templateOptions.maxLength = question.maxLength;\r\n      }\r\n      if (question.min) {\r\n        field.templateOptions.min = question.min;\r\n      }\r\n      if (question.minLength) {\r\n        field.templateOptions.minLength = question.minLength;\r\n      }\r\n      field = this.getFormlyFieldArrayConfigByQuestionType(field);\r\n      FormlyFieldConfigArray.push(field);\r\n    });\r\n    return FormlyFieldConfigArray;\r\n  }\r\n\r\n  getFormlyFieldArrayConfigByQuestionType(formlyField: FormlyFieldConfig): FormlyFieldConfig {\r\n\r\n    const field: FormlyFieldConfig = { ...formlyField };\r\n\r\n    switch (field.type) {\r\n      case CustomComponentsEnum.CUSTOM_EMAIL:\r\n        field.fieldArray = { ...emailFieldArray };\r\n        break;\r\n      // Todo: UI Team will add their respective field array reference here\r\n      case CustomComponentsEnum.CUSTOM_PHONE:\r\n        field.fieldArray = PhoneFieldConfig.fieldArray;\r\n        break;\r\n      case CustomComponentsEnum.CUSTOM_ADDRESS_FIELDS:\r\n        field.fieldArray = {\r\n          ...AddressFieldsFieldArray\r\n        };\r\n    }\r\n    return field;\r\n\r\n  }\r\n\r\n  setDefaultValuesFromAnswers(answers: Answer[], field: FormlyFieldConfig, isRecurrent: boolean): FormlyFieldConfig {\r\n    let currField: FormlyFieldConfig = { ...field };\r\n    if (!isRecurrent) {\r\n\r\n      if (currField.type === CustomComponentsEnum.CUSTOM_CHECKBOX) {\r\n        currField.defaultValue = answers[0].value === 'true' ? true : false;\r\n      } else {\r\n        currField.defaultValue = answers[0].value;\r\n      }\r\n    }\r\n    else {\r\n      currField.defaultValue = answers;\r\n    }\r\n\r\n    return currField;\r\n  }\r\n\r\n  constructor(private apiService: ApiService,\r\n    private store: Store<fromRootReducers.AppState>,\r\n    private formlyFieldsService: FormlyFieldsService\r\n  ) { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ApiService } from './api.service';\r\nimport { Task, QuestionaireDeltaResponse, QuestionaireDeltaRequest, TaskRequest } from '../models';\r\n@Injectable()\r\nexport class QuestionnaireService {\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  // getUserData(): Observable<any> {\r\n  //   return forkJoin([this.getUser(), this.getFields()]);\r\n  // }\r\n\r\n  // getUser() {\r\n  //   return of(USERDATA);\r\n  // }\r\n\r\n  // getFields() {\r\n  //   return of(QUESTIONS);\r\n  // }\r\n  // getDelta() {\r\n  //   return of([{\r\n  //     'key': 'likeToEarnInterest1',\r\n  //     'type': 'radio',\r\n  //     'templateOptions': {\r\n  //       'label': 'Would you like to earn interest on this account?',\r\n  //       'options': [\r\n  //         {\r\n  //           'label': 'Yes',\r\n  //           'value': 'true'\r\n  //         },\r\n  //         {\r\n  //           'label': 'No',\r\n  //           'value': 'False'\r\n  //         }\r\n  //       ]\r\n  //     }\r\n  //   }]);\r\n  // }\r\n\r\n\r\n  // getCurrentTask(taskId: string): Observable<Task> {\r\n  //   return this.apiService.get<Task>('tasks/' + taskId);\r\n\r\n  // }\r\n  // getFieldChangeDelta(deltaRequest: QuestionaireDeltaRequest): Observable<QuestionaireDeltaResponse> {\r\n  //   switch (deltaRequest.id) {\r\n  //     case 'InterestCheckingCheckBox':\r\n  //       return this.apiService.get<QuestionaireDeltaResponse>('questionnaireDeltaResponses/1');\r\n\r\n  //     case 'SavingAccountTextBox':\r\n  //       return this.apiService.get<QuestionaireDeltaResponse>('questionnaireDeltaResponses/2');\r\n\r\n\r\n  //     case 'ColorInputBox':\r\n  //       return this.apiService.get<QuestionaireDeltaResponse>('questionnaireDeltaResponses/3');\r\n\r\n  //     default:\r\n\r\n  //       return Observable.of(null);\r\n  //   }\r\n  // }\r\n\r\n  getCurrentTask(taskRequest: TaskRequest): Observable<Task> {\r\n    // return this.apiService.get('tasks/' + taskRequest.taskId);\r\n    //Todo: Uncomment to use Production Url\r\n    return this.apiService.post(\"api/ddo/questionnaire/taskQuestions\",taskRequest);\r\n  }\r\n\r\n  getFieldChangeDelta(deltaRequest: QuestionaireDeltaRequest): Observable<Task> {\r\n\r\n   /// Todo: uncomment to use mock service\r\n    // switch (deltaRequest.questionnaireItems[0].id) {\r\n      \r\n    //   case 'InterestCheckingCheckBox':\r\n    //     return this.apiService.get('questionnaireDeltaResponses/1');\r\n\r\n    //   case 'SavingAccountTextBox':\r\n    //     return this.apiService.get('questionnaireDeltaResponses/2');\r\n\r\n    //   case 'ColorInputBox':\r\n    //     return this.apiService.get('questionnaireDeltaResponses/3');\r\n\r\n    //   default:\r\n    //     return of(null);\r\n    // }\r\n\r\n    //Todo : Production Url\r\n    return this.apiService.post(\"api/ddo/questionnaire/tasks/question\",deltaRequest)\r\n  }\r\n  getCountryCode(): Observable<any[]> {\r\n    return this.apiService.get('countryCode');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    constructor(public auth: AuthenticationService) { }\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        request = request.clone({\r\n            setHeaders: {\r\n                'userId': `${this.auth.getToken()}`,\r\n                'Content-type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': '*',\r\n                'Cache-Control': 'no-cache, no-store, must-revalidate',\r\n                'Pragma': 'no-cache'\r\n            },\r\n            withCredentials: true\r\n        });\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable()\r\nexport class UserInfoService {\r\n  constructor(private http: HttpClient, private apiService: ApiService) { }\r\n  getUserInfo(): Observable<any> {\r\n    return this.apiService.get('user');\r\n  }\r\n  getUserContactPerson(): Observable<any> {\r\n    return this.apiService.get('contact');\r\n    ///Todo : Production Url\r\n    // return this.apiService.get('api/ddo/application/contact');\r\n\r\n  }\r\n}","import { Injectable } from \"@angular/core\";\r\n\r\nfunction _window(): any {\r\n    return window;\r\n}\r\n\r\n@Injectable()\r\nexport class WindowRef {\r\n    get nativeWindow(): any {\r\n        return _window();\r\n    }\r\n}","import { TASK_STATUSES } from \"../constants/application-request.constants\";\r\nimport { of } from \"rxjs\";\r\n\r\nexport function determinePendingTask(workflows) {\r\n    let count = 0, taskId = '', workflowId = '';\r\n    while(count < workflows.length) {\r\n        const workflow = workflows[count];\r\n        if (workflow.status === TASK_STATUSES.inProgress) {\r\n            workflowId = workflow.id;\r\n            let count1 = 0;\r\n            while(count1 < workflow.tasks.length) {\r\n                const task = workflow.tasks[count1];\r\n                if (task.status === TASK_STATUSES.inProgress) {\r\n                    taskId = task.id;\r\n                    break;\r\n                }\r\n                count1++;\r\n            }\r\n            break;\r\n        }\r\n        count++;\r\n    }\r\n    if(workflows && workflows.length > 0 && !workflowId && !taskId) {\r\n        workflowId = workflows[0].id;\r\n        taskId = workflows[0].tasks[0].id;\r\n    }\r\n    return of({\r\n        workflowId,\r\n        taskId\r\n    });\r\n}","module.exports = \"<div class=\\\"custom-address-fields\\\">\\r\\n    <span class=\\\"bold\\\">{{field.fieldArray?.templateOptions?.heading}}</span>\\r\\n    <div *ngFor=\\\"let data of field.fieldGroup; let i = index;\\\">\\r\\n        <formly-group\\r\\n            [field]=\\\"data\\\"\\r\\n            [options]=\\\"options\\\"\\r\\n            [form]=\\\"formControl\\\">\\r\\n        </formly-group>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"field.fieldArray?.recurrent\\\">\\r\\n        <button class=\\\"btn btn-link mt-2\\\" type=\\\"button\\\" (click)=\\\"add()\\\">\\r\\n            {{ field.fieldArray.templateOptions.btnText }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\"","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { FieldArrayType, FormlyFormBuilder  } from '@ngx-formly/core';\r\n\r\n@Component({\r\n  selector: 'address-fields',\r\n  templateUrl: './address-fields.component.html',\r\n  styleUrls: ['./address-fields.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class AddressFieldsComponent extends FieldArrayType{\r\n  constructor(builder: FormlyFormBuilder) {\r\n    super(builder);\r\n  }\r\n}","module.exports = \"<div class=\\\"Addressfield\\\">\\r\\n    <h4>Documents</h4>\\r\\n<div *ngFor=\\\"let field of field.fieldGroup; let i = index;\\\">\\r\\n    <p>Address Proof</p>\\r\\n    <div class=\\\"box_wrapper\\\">\\r\\n        <upload-file></upload-file>\\r\\n    </div>\\r\\n    <formly-group\\r\\n    [model]=\\\"model[i]\\\"\\r\\n      [field]=\\\"field\\\"\\r\\n      [options]=\\\"options\\\"\\r\\n      [form]=\\\"formControl\\\">\\r\\n    </formly-group>\\r\\n</div>\\r\\n<div *ngIf=\\\"field.fieldArray?.recurrent\\\">\\r\\n    <button class=\\\"btn btn-link mt-2\\\" type=\\\"button\\\" (click)=\\\"add()\\\">\\r\\n        {{ field.fieldArray.templateOptions.btnText }}\\r\\n    </button>\\r\\n</div>\"","module.exports = \".box_wrapper {\\n  border: 1px dashed #ccc;\\n  font-size: 12px;\\n  text-align: center;\\n  margin-top: 10px; }\\n  .box_wrapper h4 {\\n    font-size: 12px; }\\n  .Addressfield {\\n  margin-top: 10px; }\\n  .Addressfield p {\\n    margin: 0px;\\n    padding: 0px; }\\n  .Addressfield .addmoreaddress {\\n    color: blue;\\n    cursor: pointer; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FieldArrayType, FormlyFormBuilder  } from '@ngx-formly/core';\r\n@Component({\r\n  selector: 'address-proof',\r\n  templateUrl: './address-proof.component.html',\r\n  styleUrls: ['./address-proof.component.scss']\r\n})\r\nexport class AddressProofComponent extends FieldArrayType implements OnInit {\r\n  constructor(builder: FormlyFormBuilder) {\r\n    super(builder);\r\n      }\r\n  ngOnInit() {\r\n    console.log(this.field.fieldArray, ':::Arrray');\r\n    this.add();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n\\r\\n      <!-- <ng-select [items]=\\\"options$ | async\\\"\\r\\n      [placeholder]=\\\"to.placeholder\\\"  class=\\\"form-control\\\"\\r\\n      [typeahead]=\\\"search$\\\"\\r\\n      [formControl]=\\\"formControl\\\">\\r\\n    </ng-select> -->\\r\\n    <!-- <p>{{to.label}}</p> -->\\r\\n     <ng-select [items]=\\\"options$ | async\\\"\\r\\n      class=\\\"form-control\\\"\\r\\n      [typeahead]=\\\"search$\\\"\\r\\n      [formControl]=\\\"formControl\\\"\\r\\n      (clear)=\\\"clearSelect($event)\\\"\\r\\n      (change)=\\\"searchChanges($event)\\\"\\r\\n      (blur)=\\\"searchChanges1($event)\\\"\\r\\n      (focus)=\\\"searchChanges1($event)\\\">\\r\\n    </ng-select>\"","module.exports = \".ng-spinner-zone {\\n  display: none; }\\n\"","import { Component, EventEmitter, OnInit, OnDestroy } from '@angular/core';\r\nimport { FieldType } from '@ngx-formly/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { takeUntil } from 'rxjs/operators/takeUntil';\r\nimport { startWith } from 'rxjs/operators/startWith';\r\nimport { filter } from 'rxjs/operators/filter';\r\nimport { debounceTime } from 'rxjs/operators/debounceTime';\r\nimport { distinctUntilChanged } from 'rxjs/operators/distinctUntilChanged';\r\nimport { switchMap } from 'rxjs/operators/switchMap';\r\n// import { Field } from '@ngx-formly/core';\r\n\r\n@Component({\r\n  selector: 'auto-complete',\r\n  templateUrl: './auto-complete.component.html',\r\n  styleUrls: ['./auto-complete.component.scss']\r\n})\r\nexport class AutoCompleteComponent extends FieldType implements OnInit, OnDestroy {\r\n  onDestroy$ = new Subject<void>();\r\n  search$ = new EventEmitter();\r\n  options$;\r\n  ngOnInit() {\r\n    // super();\r\n    this.options$ = this.search$.pipe(\r\n      takeUntil(this.onDestroy$),\r\n      startWith(''),\r\n      filter(v => v !== null),\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      switchMap(this.to.search$),\r\n    );\r\n    this.options$.subscribe();\r\n    console.log(this.to, '::::3222', this);\r\n    // this.field.templateOptions.serachTerm = function () {\r\n    //   console.log('at the serach');\r\n    // }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDestroy$.complete();\r\n  }\r\n\r\n  clearSelect(evt) {\r\n    this.search$.emit('');\r\n    console.log('clearselect',evt);\r\n  }    \r\n  searchChanges(evt){\r\n\r\n    evt = typeof evt == 'string' ? evt : '';\r\n    this.search$.emit(evt);\r\n    console.log('::::blucrchanges',evt);\r\n  }\r\n\r\n  searchChanges1() {\r\n    this.search$.emit('');\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"custom-control custom-checkbox\\\">\\r\\n  <input class=\\\"custom-control-input\\\"\\r\\n    type=\\\"checkbox\\\" [class.is-invalid]=\\\"showError\\\"\\r\\n    [formControl]=\\\"formControl\\\" [formlyAttributes]=\\\"field\\\">\\r\\n  <label class=\\\"custom-control-label\\\" [for]=\\\"id\\\">\\r\\n    {{ to.label }}\\r\\n  </label>\\r\\n  <span *ngIf='!to.required' class=\\\"ml-4\\\">(optional)</span>\\r\\n  <i *ngIf=\\\"to.tooltip\\\" class=\\\"control-label-help fa fa-question-circle-o ml-3\\\" containerClass=\\\"{{to.tooltip.containerClass}}\\\" tooltip=\\\"{{to.tooltip.content}}\\\" placement=\\\"{{to.tooltip.placement}}\\\"></i>\\r\\n</div>\"","module.exports = \".custom-checkbox {\\n  padding-top: 1rem;\\n  padding-bottom: 1rem; }\\n  .custom-checkbox .custom-control-label::before {\\n    border-radius: 0; }\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FieldType } from '@ngx-formly/core';\r\n@Component({\r\n  selector: 'checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CheckboxComponent extends FieldType {\r\n}\r\n\r\n","module.exports = \"<div class=\\\"formly-date-picker form-group pb-3 pt-3\\\">\\r\\n  <label class=\\\"formly-date-picker__label\\\" [for]=\\\"id\\\">\\r\\n    {{ to.label }}\\r\\n    <span *ngIf='!to.required' class=\\\"float-right\\\">(optional)</span>\\r\\n    <i *ngIf=\\\"to.tooltip\\\"\\r\\n      class=\\\"control-label-help fa fa-question-circle-o ml-3\\\"\\r\\n      containerClass=\\\"{{to.tooltip.containerClass}}\\\"\\r\\n      tooltip=\\\"{{to.tooltip.content}}\\\"\\r\\n      placement=\\\"{{to.tooltip.placement}}\\\"></i>\\r\\n  </label>\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <input [id]=\\\"id\\\" class=\\\"form-control formly-date-picker__input\\\"\\r\\n      [formControl]=\\\"formControl\\\"\\r\\n      [placeholder]=\\\"to.placeholder\\\"\\r\\n      [formlyAttributes]=\\\"field\\\"\\r\\n      bsDatepicker #dp=\\\"bsDatepicker\\\"\\r\\n      [minDate]=\\\"to.datepickerOptions && to.datepickerOptions.minDate\\\"\\r\\n      [maxDate]=\\\"to.datepickerOptions && to.datepickerOptions.maxDate\\\"\\r\\n      showWeekNumbers=\\\"false\\\">\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n      <div class=\\\"input-group-text\\\">\\r\\n        <i class=\\\"fa fa-calendar-o\\\" aria-hidden=\\\"true\\\" (click)=\\\"dp.toggle()\\\"></i>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".formly-date-picker__input {\\n  border-right: 0; }\\n\\n.formly-date-picker .input-group-text {\\n  background: #ffffff;\\n  border-left: 0; }\\n\\n.bs-datepicker-head {\\n  text-align: center; }\\n\\n.bs-datepicker-head .previous {\\n    float: left; }\\n\\n.bs-datepicker-head .next {\\n    float: right; }\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FieldType } from '@ngx-formly/core';\r\n\r\n@Component({\r\n  selector: 'date-picker',\r\n  templateUrl: './date-picker.component.html',\r\n  styleUrls: ['./date-picker.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DatePickerComponent extends FieldType {\r\n\r\n}\r\n","module.exports = \"<div class=\\\"formly-dropdown form-group pb-3 pt-3\\\">\\r\\n  <label class=\\\"formly-dropdown__label\\\" [for]=\\\"id\\\">\\r\\n    {{to.label}}\\r\\n    <span *ngIf='!to.required' class=\\\"ml-4 float-right\\\">(optional)</span>\\r\\n    <i *ngIf=\\\"to.tooltip\\\" class=\\\"control-label-help fa fa-question-circle-o ml-3\\\" containerClass=\\\"{{to.tooltip.containerClass}}\\\"\\r\\n      tooltip=\\\"{{to.tooltip.content}}\\\" placement=\\\"{{to.tooltip.placement}}\\\"></i>\\r\\n  </label>\\r\\n  <select class=\\\"form-control\\\" [formControl]=\\\"formControl\\\" [class.is-invalid]=\\\"showError\\\" [formlyAttributes]=\\\"field\\\">\\r\\n    <ng-container *ngFor=\\\"let item of to.options | formlySelectOptions:field | async\\\">\\r\\n      <option [value]=\\\"item[valueProp]\\\" [disabled]=\\\"item.disabled\\\">\\r\\n        {{ item[labelProp] }}\\r\\n      </option>\\r\\n    </ng-container>\\r\\n  </select>\\r\\n</div>\"","module.exports = \"\"","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { FieldType } from '@ngx-formly/core';\r\n\r\n@Component({\r\n  selector: 'formly-field-dropdown',\r\n  templateUrl: './dropdown.component.html',\r\n  styleUrls: ['./dropdown.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DropdownComponent extends FieldType {\r\n  get labelProp(): string { return this.to.labelProp || 'label'; }\r\n  get valueProp(): string { return this.to.valueProp || 'value'; }\r\n}\r\n","module.exports = \"<div class=\\\"formly-email mt-3\\\">\\r\\n  <span class=\\\"formly-phone__title bold\\\">Email</span>\\r\\n  <div *ngFor=\\\"let data of field.fieldGroup; let i = index;\\\">\\r\\n    <formly-group [field]=\\\"data\\\" [options]=\\\"options\\\" [form]=\\\"formControl\\\">\\r\\n    </formly-group>\\r\\n  </div>\\r\\n  <div>\\r\\n    <button class=\\\"btn btn-link mt-2 pl-0\\\" type=\\\"button\\\" (click)=\\\"add()\\\">\\r\\n      {{ field.fieldArray.templateOptions.btnText }}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".formly-email .no-pad-top .custom-control {\\n  padding-top: 0; }\\n\"","import { Component, OnInit, OnChanges, ViewEncapsulation } from '@angular/core';\r\nimport { FormlyFormBuilder, FieldArrayType } from '@ngx-formly/core';\r\n\r\n@Component({\r\n  selector: 'email',\r\n  templateUrl: './email.component.html',\r\n  styleUrls: ['./email.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class EmailComponent extends FieldArrayType implements OnInit, OnChanges {\r\n  constructor(builder: FormlyFormBuilder) {\r\n    super(builder);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"formly-phone mt-3\\\">\\r\\n  <span class=\\\"formly-phone__title bold\\\">Phone</span>\\r\\n  <div *ngFor=\\\"let data of field.fieldGroup; let i = index;\\\">\\r\\n    <formly-group [field]=\\\"data\\\" [options]=\\\"options\\\" [form]=\\\"formControl\\\">\\r\\n    </formly-group>\\r\\n  </div>\\r\\n  <div>\\r\\n    <button class=\\\"btn btn-link mt-2 pl-0\\\" type=\\\"button\\\" (click)=\\\"add()\\\">\\r\\n      {{ field.fieldArray.templateOptions.btnText }}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".formly-phone .btn-link {\\n  text-decoration: none; }\\n\\n.formly-phone .no-pad-top .custom-control {\\n  padding-top: 0; }\\n\"","import { Component, OnInit, OnChanges, ViewEncapsulation } from '@angular/core';\r\nimport {  FieldArrayType, FormlyFormBuilder } from '@ngx-formly/core';\r\n@Component({\r\n  selector: 'phone',\r\n  templateUrl: './phone.component.html',\r\n  styleUrls: ['./phone.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PhoneComponent extends FieldArrayType implements OnInit, OnChanges {\r\n\r\n  constructor(builder: FormlyFormBuilder) {\r\n    super(builder);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div [formGroup]=\\\"form\\\" class=\\\"custom-radio-button pb-3 pt-3\\\">\\r\\n  <label class=\\\"custom-control-radio-label\\\" [for]=\\\"name\\\">\\r\\n    {{ to.label }}\\r\\n  </label>\\r\\n  <div class=\\\"custom-control custom-radio mr-5\\\" *ngFor=\\\"let option of to.options ; let i = index;\\\">        \\r\\n    <input class=\\\"custom-control-input\\\" type=\\\"radio\\\"  \\r\\n      [id]=\\\"id + '_' + i\\\"   \\r\\n      [name]=\\\"id\\\"\\r\\n      [class.is-invalid]=\\\"showError\\\"\\r\\n      [value]=\\\"option[valueProp]\\\"\\r\\n      [formControl]=\\\"formControl\\\"\\r\\n      [formlyAttributes]=\\\"field\\\">    \\r\\n      <label class=\\\"custom-control-label\\\" [for]=\\\"id + '_' + i\\\">\\r\\n        {{ option.label }}\\r\\n      </label>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".custom-radio-button .custom-control-radio-label {\\n  display: block; }\\n\\n.custom-radio-button .custom-radio {\\n  display: inline-block; }\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FieldType } from '@ngx-formly/core';\r\n@Component({\r\n  selector: 'radiobutton',\r\n  templateUrl: './radiobutton.component.html',\r\n  styleUrls: ['./radiobutton.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class RadiobuttonComponent extends FieldType {\r\n  get labelProp(): string { return this.to.labelProp || 'label'; }\r\n  get valueProp(): string { return this.to.valueProp || 'value'; }\r\n}\r\n","module.exports = \"<div class=\\\"formly-textbox form-group pb-3 pt-3\\\">\\r\\n    <label class=\\\"formly-textbox__label\\\" [for]=\\\"id\\\">\\r\\n        {{to.label}}\\r\\n        <span class=\\\"float-right\\\">\\r\\n            <span *ngIf='!to.required' class=\\\"ml-4\\\">(optional)</span>\\r\\n            <i *ngIf=\\\"to.tooltip\\\"\\r\\n                class=\\\"control-label-help fa fa-question-circle-o ml-3\\\"\\r\\n                containerClass=\\\"{{to.tooltip.containerClass}}\\\"\\r\\n                tooltip=\\\"{{to.tooltip.content}}\\\"\\r\\n                placement=\\\"{{to.tooltip.placement}}\\\"></i>\\r\\n        </span>\\r\\n    </label>\\r\\n    <input class=\\\"form-control\\\"\\r\\n        [type]=\\\"type\\\"\\r\\n        [formControl]=\\\"formControl\\\"\\r\\n        [formlyAttributes]=\\\"field\\\"\\r\\n        [class.is-invalid]=\\\"showError\\\">\\r\\n</div>\"","module.exports = \"\"","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { FieldType } from '@ngx-formly/core';\r\n\r\n@Component({\r\n  selector: 'textbox',\r\n  templateUrl: './textbox.component.html',\r\n  styleUrls: ['./textbox.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class TextboxComponent extends FieldType {\r\n    get type() {\r\n        return this.to.type || 'text';\r\n    }\r\n}\r\n","module.exports = \"<div>\\r\\n<div class=\\\"drop-container\\\" ngFileDrop [options]=\\\"options\\\"\\r\\n (uploadOutput)=\\\"onUploadOutput($event)\\\" [uploadInput]=\\\"uploadInput\\\"\\r\\n  [ngClass]=\\\"{ 'is-drop-over': dragOver }\\\">\\r\\n    <h4>Drag documents here or </h4>\\r\\n  </div>\\r\\n  \\r\\n  <label class=\\\"upload-button\\\">\\r\\n    <input type=\\\"file\\\" ngFileSelect [options]=\\\"options\\\" \\r\\n    (uploadOutput)=\\\"onUploadOutput($event)\\\" [uploadInput]=\\\"uploadInput\\\" multiple>\\r\\n    \\r\\n  </label>\\r\\n \\r\\n</div>\"","module.exports = \"input[type=file] {\\n  cursor: pointer;\\n  height: 34px;\\n  overflow: hidden;\\n  position: relative; }\\n\\ninput[type=file]:before {\\n  color: white;\\n  width: 158px;\\n  height: 32px;\\n  font-size: 16px;\\n  line-height: 32px;\\n  display: none;\\n  background: white; }\\n\\ninput[type=file]:after {\\n  color: deepskyblue;\\n  content: 'Choose file';\\n  padding: 0 10px;\\n  text-align: center;\\n  font-family: Helvetica, Arial, sans-serif;\\n  position: absolute;\\n  left: 30%;\\n  z-index: 99999;\\n  top: 0;\\n  font-size: 15px; }\\n\\ninput[type=file]:focus {\\n  outline: none; }\\n\\ninput[type=file]::-webkit-file-upload-button {\\n  display: none; }\\n\"","\r\nimport { Component, OnInit, EventEmitter } from '@angular/core';\r\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions } from 'ngx-uploader';\r\n@Component({\r\n  selector: 'upload-file',\r\n  templateUrl: './upload-file.component.html',\r\n  styleUrls: ['./upload-file.component.scss']\r\n})\r\n\r\nexport class UploadFileComponent implements OnInit {\r\n  options: UploaderOptions;\r\n  formData: FormData;\r\n  files: UploadFile[];\r\n  uploadInput: EventEmitter<UploadInput>;\r\n  humanizeBytes: Function;\r\n  dragOver: boolean;\r\n  constructor() {\r\n    this.options = { concurrency: 1, maxUploads: 1 };\r\n    this.files = []; // local uploading files array\r\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\r\n    this.humanizeBytes = humanizeBytes;\r\n  }\r\n  onUploadOutput(output: UploadOutput): void {\r\n    if (output.type === 'allAddedToQueue') { // when all files added in queue\r\n      // uncomment this if you want to auto upload files when added\r\n      const event: UploadInput = {\r\n        type: 'uploadAll',\r\n        url: '/upload',\r\n        method: 'POST',\r\n        data: { foo: 'bar' }\r\n      };\r\n      this.uploadInput.emit(event);\r\n    } else if (output.type === 'addedToQueue'  && typeof output.file !== 'undefined') { // add file to array when added\r\n      this.files.push(output.file);\r\n    } else if (output.type === 'uploading' && typeof output.file !== 'undefined') {\r\n      // update current data in files array for uploading file\r\n      const index = this.files.findIndex(file => typeof output.file !== 'undefined' && file.id === output.file.id);\r\n      this.files[index] = output.file;\r\n    } else if (output.type === 'removed') {\r\n      // remove file from array when removed\r\n      this.files = this.files.filter((file: UploadFile) => file !== output.file);\r\n    } else if (output.type === 'dragOver') {\r\n      this.dragOver = true;\r\n    } else if (output.type === 'dragOut') {\r\n      this.dragOver = false;\r\n    } else if (output.type === 'drop') {\r\n      this.dragOver = false;\r\n    }\r\n  }\r\n  startUpload(): void {\r\n    const event: UploadInput = {\r\n      type: 'uploadAll',\r\n      url: 'http://ngx-uploader.com/upload',\r\n      method: 'POST',\r\n      data: { foo: 'bar' }\r\n    };\r\n\r\n    this.uploadInput.emit(event);\r\n  }\r\n\r\n  cancelUpload(id: string): void {\r\n    this.uploadInput.emit({ type: 'cancel', id: id });\r\n  }\r\n\r\n  removeFile(id: string): void {\r\n    this.uploadInput.emit({ type: 'remove', id: id });\r\n  }\r\n\r\n  removeAllFiles(): void {\r\n    this.uploadInput.emit({ type: 'removeAll' });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormlyModule } from '@ngx-formly/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\r\nimport { TooltipModule, BsDatepickerModule } from 'ngx-bootstrap';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxUploaderModule } from 'ngx-uploader';\r\n\r\nimport { TextboxComponent } from './components/textbox/textbox.component';\r\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\r\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\r\nimport { RadiobuttonComponent } from './components/radiobutton/radiobutton.component';\r\nimport { AutoCompleteComponent } from './components/auto-complete/auto-complete.component';\r\nimport { DatePickerComponent } from './components/date-picker/date-picker.component';\r\nimport { AddressFieldsComponent } from './components/address-fields/address-fields.component';\r\nimport { QuestionnaireComponent } from '../questionnaire/questionnaire.component';\r\nimport { SectionComponent } from '../section/section.component';\r\nimport { TaskContainerComponent } from '../task-container/task-container.component';\r\nimport { UploadFileComponent } from './components/upload-file/upload-file.component';\r\nimport { EmailComponent } from './components/email/email.component';\r\nimport { CustomComponentsEnum } from './enums/custom-components.enum';\r\nimport { PhoneComponent } from './components/phone/phone.component';\r\n\r\nimport { FormlySelectOptionsPipe } from './pipes/select-options.pipe';\r\nimport { AddressProofComponent } from './components/address-proof/address-proof.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    FormlyBootstrapModule,\r\n    NgSelectModule,\r\n    NgxUploaderModule,\r\n    NgbModule.forRoot(),\r\n    FormlyModule.forRoot({\r\n      validationMessages: [\r\n        { name: 'server-error', message: (err) => err }\r\n      ],\r\n      types: [\r\n        { name: CustomComponentsEnum.CUSTOM_DROPDOWN, component: DropdownComponent },\r\n        { name: CustomComponentsEnum.CUSTOM_RADIO_BUTTON, component: RadiobuttonComponent },\r\n        { name: CustomComponentsEnum.CUSTOM_TYPEAHEAD, component: AutoCompleteComponent, extends: 'input' },\r\n        { name: CustomComponentsEnum.CUSTOM_DATEPICKER, component: DatePickerComponent },\r\n        { name: CustomComponentsEnum.CUSTOM_ADDRESS_FIELDS, component: AddressFieldsComponent },\r\n        { name: CustomComponentsEnum.CUSTOM_TEXTBOX, component: TextboxComponent },\r\n        { name: CustomComponentsEnum.CUSTOM_EMAIL, component: EmailComponent },\r\n        { name: CustomComponentsEnum.CUSTOM_PHONE, component: PhoneComponent },\r\n        { name: CustomComponentsEnum.CUSTOM_CHECKBOX, component: CheckboxComponent },\r\n        { name: CustomComponentsEnum.CUSTOM_ADDRESS_PROOF, component: AddressProofComponent },\r\n      ]\r\n    }),\r\n    \r\n    FormlyBootstrapModule,\r\n    TooltipModule.forRoot(),\r\n    BsDatepickerModule.forRoot()\r\n  ],\r\n  declarations: [\r\n    DropdownComponent,\r\n    CheckboxComponent,\r\n    RadiobuttonComponent,\r\n    AutoCompleteComponent,\r\n    DatePickerComponent,\r\n    AddressProofComponent,\r\n    QuestionnaireComponent,\r\n    SectionComponent,\r\n    TaskContainerComponent,\r\n    UploadFileComponent,\r\n    TextboxComponent,\r\n    PhoneComponent,\r\n    AddressFieldsComponent,\r\n    EmailComponent,\r\n    FormlySelectOptionsPipe\r\n  ],\r\n  exports: [\r\n    DropdownComponent,\r\n    CheckboxComponent,\r\n    RadiobuttonComponent,\r\n    AutoCompleteComponent,\r\n    DatePickerComponent,\r\n    AddressProofComponent,\r\n    QuestionnaireComponent,\r\n    SectionComponent,\r\n    TaskContainerComponent,\r\n    UploadFileComponent,\r\n    TextboxComponent,\r\n    AddressFieldsComponent,\r\n    EmailComponent,\r\n    PhoneComponent,\r\n    FormlySelectOptionsPipe\r\n  ]\r\n})\r\nexport class CustomFormlyFieldsModule { }\r\n","export enum CustomComponentsEnum {\r\n    CUSTOM_CHECKBOX = 'custom-checkbox',\r\n    CUSTOM_DROPDOWN = 'custom-dropdown',\r\n    CUSTOM_RADIO_BUTTON = 'custom-radio-button',\r\n    CUSTOM_TYPEAHEAD = 'typeahead',\r\n    CUSTOM_DATEPICKER = 'custom-datepicker',\r\n    CUSTOM_ADDRESS_FIELDS = 'custom-address-fields',\r\n    CUSTOM_ADDRESS_PROOF = 'repeatAddressData',\r\n    CUSTOM_TEXTBOX = 'custom-textbox',\r\n    CUSTOM_EMAIL = 'custom-email',\r\n    CUSTOM_PHONE = 'custom-phone',   \r\n}\r\n","import { FormlyFieldConfig } from \"@ngx-formly/core\";\r\nimport { tap, startWith, takeUntil } from \"rxjs/operators\";\r\n\r\nexport const AddressFieldsFieldArray: FormlyFieldConfig = {\r\n    fieldGroupClassName: 'row',\r\n    fieldGroup: [\r\n        {\r\n            key: 'addressDescription',\r\n            className: 'col-sm-12 mt-2',\r\n            type: 'custom-dropdown',\r\n            templateOptions: {\r\n                required: true,\r\n                label: 'Address Description',\r\n                options: [//TODO: what are all the values and the structure of options\r\n                    {\r\n                        label: 'Home Address',\r\n                        value: 'homeAddress'\r\n                    },\r\n                    {\r\n                        label: 'Legal Address',\r\n                        value: 'legalAddress'\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            key: 'legalAndHomeAddressSame',\r\n            type: 'custom-radio-button',\r\n            className: 'col-sm-12 mt-2',\r\n            templateOptions: {\r\n                required: true,\r\n                label: \"Is your home/legal address the same as the primary account holder's address?\",\r\n                options: [\r\n                    {\r\n                        label: 'Yes',\r\n                        value: true\r\n                    },\r\n                    {\r\n                        label: 'No',\r\n                        value: false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            key: 'address1',\r\n            type: 'custom-textbox',\r\n            className: 'col-sm-12 mt-2',\r\n            templateOptions: {\r\n                required: true,\r\n                label: 'Address 1',\r\n            }\r\n        },\r\n        {\r\n            key: 'address2',\r\n            type: 'custom-textbox',\r\n            className: 'col-sm-12 mt-2',\r\n            templateOptions: {\r\n                required: true,\r\n                label: 'Address 2',\r\n            }\r\n        },\r\n        {\r\n            key: 'city',\r\n            type: 'custom-textbox',\r\n            className: 'col-sm-6 mt-2',\r\n            templateOptions: {\r\n                required: true,\r\n                label: 'City',\r\n            }\r\n        },\r\n        {\r\n            key: 'postalCode',\r\n            type: 'custom-textbox',\r\n            className: 'col-sm-6 mt-2',\r\n            templateOptions: {\r\n                required: true,\r\n                label: 'Postal Zip',\r\n            }\r\n        },\r\n        {\r\n            key: 'state',\r\n            type: 'custom-dropdown',\r\n            className: 'col-sm-6 mt-2',\r\n            templateOptions: {\r\n                label: 'State',\r\n                required: true,\r\n                hideRequiredMarker: true,\r\n                options: []\r\n            },\r\n            lifecycle: {\r\n                onInit: (form, field) => {\r\n                    form.get('country').valueChanges.pipe(\r\n                        startWith(form.get('country').value),\r\n                        tap(country => {\r\n                            field.formControl.setValue('');\r\n                            if (country && country === 'India') {\r\n                                field.templateOptions.options = [\r\n                                    {\r\n                                      value: 'Maharashtra',\r\n                                      label: 'Maharashtra'\r\n                                    },\r\n                                    {\r\n                                      value: 'Delhi',\r\n                                      label: 'Delhi'\r\n                                    },\r\n                                    {\r\n                                      value: 'Uttar Pradesh',\r\n                                      label: 'Uttar Pradesh'\r\n                                    }\r\n                                  ];\r\n                            }\r\n                        }),\r\n                    ).subscribe();\r\n                },\r\n            },\r\n        },\r\n        {\r\n            key: 'country',\r\n            type: 'custom-dropdown',\r\n            className: 'col-sm-6 mt-2',\r\n            templateOptions: {\r\n                required: true,\r\n                label: 'Country',\r\n                options: [\r\n                    {\r\n                        \"label\": \"India\",\r\n                        \"value\": \"India\"\r\n                    },\r\n                    {\r\n                        \"label\": \"United States of America\",\r\n                        \"value\": \"United States of America\"\r\n                    }\r\n                ],\r\n                hideRequiredMarker: true\r\n            }\r\n        },\r\n        {\r\n            key: 'addressSince',\r\n            type: 'custom-datepicker',\r\n            className: 'col-sm-12 mt-2',\r\n            templateOptions: {\r\n                label: 'Address Since',\r\n                required: true\r\n            }\r\n        },\r\n        {\r\n            key: 'mailingAddress',\r\n            type: 'custom-radio-button',\r\n            className: 'col-sm-12 mt-2',\r\n            templateOptions: {\r\n                required: true,\r\n                label: \"Would you like to use this address as your mailing address?\",\r\n                options: [\r\n                    {\r\n                        label: 'Yes',\r\n                        value: true\r\n                    },\r\n                    {\r\n                        label: 'No',\r\n                        value: false\r\n                    }\r\n                ]\r\n            }\r\n        }],\r\n    templateOptions: {\r\n        btnText: '+ Add a new address',\r\n        heading: 'Addresses'\r\n    }\r\n}\r\n\r\n","import { FormlyFieldConfig } from \"@ngx-formly/core\";\r\n\r\nexport const emailFieldArray: FormlyFieldConfig = {\r\n    fieldGroupClassName: 'row',\r\n    fieldGroup: [\r\n        {\r\n            className: 'col-sm-12',\r\n            type: 'custom-dropdown',\r\n            key: 'description',\r\n            templateOptions: {\r\n                label: 'Email Description',\r\n                required: true,\r\n                options: [\r\n                    { label: 'Home', value: 'home' },\r\n                    { label: 'Work', value: 'work' },\r\n                    { label: 'Phone', value: 'phone' }\r\n                ]\r\n            },\r\n        },\r\n\r\n        {\r\n            type: 'custom-textbox',\r\n            key: 'emailAddress',\r\n            className: 'col-sm-12',\r\n            templateOptions: {\r\n                label: 'Email Address',\r\n                required: true\r\n\r\n            },\r\n        }\r\n\r\n    ],\r\n    templateOptions: {\r\n        btnText: '+ Add a new email',\r\n    }\r\n}\r\n\r\n\r\n","import { FormlyFieldConfig } from '@ngx-formly/core';\r\n\r\nexport const PhoneFieldConfig: FormlyFieldConfig = {\r\n    key: 'phone',\r\n    type: 'custom-phone',\r\n    fieldArray: {\r\n        fieldGroupClassName: 'row',\r\n        fieldGroup: [\r\n            {\r\n                className: 'col-sm-12',\r\n                type: 'custom-dropdown',\r\n                key: 'description',\r\n                templateOptions: {\r\n                    label: 'Phone Description',\r\n                    required: true,\r\n                    options: [\r\n                        { label: 'Home', value: 'home' },\r\n                        { label: 'Work', value: 'work' },\r\n                        { label: 'Phone', value: 'phone' }\r\n                    ]\r\n                },\r\n            },\r\n            {\r\n                type: 'custom-dropdown',\r\n                key: 'countryCode',\r\n                className: 'col-sm-6',\r\n                templateOptions: {\r\n                    label: 'Country Code',\r\n                    options: [\r\n                        {\r\n                            'label': '+91',\r\n                            'value': '+91'\r\n                        },\r\n                        {\r\n                            'label': '+1',\r\n                            'value': '+1'\r\n                        },\r\n                        {\r\n                            'label': '+111',\r\n                            'value': '+111'\r\n                        },\r\n                    ]\r\n                },\r\n            },\r\n            {\r\n                type: 'custom-textbox',\r\n                key: 'homePhone',\r\n                className: 'col-sm-6',\r\n                templateOptions: {\r\n                    label: 'Home Phone Number',\r\n                },\r\n            },\r\n            {\r\n                type: 'custom-checkbox',\r\n                key: 'setAsPrimary',\r\n                className: 'col-sm-12',\r\n                templateOptions: {\r\n                    label: 'Use this number as primary contact',\r\n                    required: true\r\n                },\r\n            },\r\n            {\r\n                type: 'custom-checkbox',\r\n                key: 'setForBanking',\r\n                className: 'col-sm-12 no-pad-top',\r\n                templateOptions: {\r\n                    label: 'Use this number for approving banking activity',\r\n                    required: true\r\n                },\r\n            }\r\n        ],\r\n        templateOptions: {\r\n            btnText: '+ Add a new phone Number'\r\n        }\r\n    }\r\n};\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable, of as observableOf } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormlyFieldConfig } from '@ngx-formly/core';\r\n@Pipe({ name: 'formlySelectOptions' })\r\n\r\nexport class FormlySelectOptionsPipe implements PipeTransform {\r\n  transform(options, field?: FormlyFieldConfig) {\r\n    if (!(options instanceof Observable)) {\r\n      options = observableOf(options);\r\n    }\r\n     return (options as Observable<any>).pipe(\r\n      map(value => this.toOptions(value, field || {})),\r\n    );\r\n  }\r\n   private toOptions(options, field: FormlyFieldConfig) {\r\n    const gOptions: any[] = [],\r\n      groups: { [key: string]: any[] } = {},\r\n      to = field.templateOptions || {};\r\n     options.map((option: any) => {\r\n      if (!this.getGroupProp(option, to)) {\r\n        gOptions.push(this.toOption(option, to));\r\n      } else {\r\n        if (!groups[this.getGroupProp(option, to)]) {\r\n          groups[this.getGroupProp(option, to)] = [];\r\n          gOptions.push({\r\n            label: this.getGroupProp(option, to),\r\n            group: groups[this.getGroupProp(option, to)],\r\n          });\r\n        }\r\n        groups[this.getGroupProp(option, to)].push(this.toOption(option, to));\r\n      }\r\n    });\r\n     return gOptions;\r\n  }\r\n   private toOption(item, to) {\r\n    return {\r\n      label: this.getLabelProp(item, to),\r\n      value: this.getValueProp(item, to),\r\n    };\r\n  }\r\n   private getLabelProp(item, to): string {\r\n    if (typeof to.labelProp === 'function') {\r\n      return to.labelProp(item);\r\n    }\r\n     return item[to.labelProp || 'label'];\r\n  }\r\n   private getValueProp(item, to): string {\r\n    if (typeof to.valueProp === 'function') {\r\n      return to.valueProp(item);\r\n    }\r\n     return item[to.valueProp || 'value'];\r\n  }\r\n   private getGroupProp(item, to): string {\r\n    if (typeof to.groupProp === 'function') {\r\n      return to.groupProp(item);\r\n    }\r\n     return item[to.groupProp || 'group'];\r\n  }\r\n}","module.exports = \"<!-- <app-header [config]='navConfig'></app-header>\\r\\n<nav class=\\\"navbar navbar-expand-lg navbar--secondary\\\">\\r\\n    <div id=\\\"navbarNavAltMarkup\\\">\\r\\n        <div class=\\\"navbar-nav\\\">\\r\\n            <a class=\\\"nav-item nav-link active\\\" href=\\\"ddo/my-applications\\\">Overview\\r\\n                <span class=\\\"sr-only\\\">(current)</span>\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav> -->\\r\\n<router-outlet></router-outlet>\\r\\n\"","module.exports = \".navbar--secondary {\\n  background: linear-gradient(180deg, #00bdf2, #00b3f0 18%, #0066b3 77%, #004985) !important; }\\n\\n.nav-item {\\n  color: white; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TOP_NAVIGATION } from '../core/constants/navigation.constants';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  title = 'app';\r\n  navConfig: any;\r\n  applicationDetails: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.navConfig = {\r\n      'topNavConfig': TOP_NAVIGATION\r\n    };\r\n    this.applicationDetails = {\r\n      'heading': 'Application for 2 Joint Accouts',\r\n      'description': 'Title of account: John, Jane and Susan joint account'\r\n    };\r\n  }\r\n\r\n}\r\n","module.exports = \"    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n      <formly-form [model]=\\\"model\\\" [fields]=\\\"fields\\\" [options]=\\\"options\\\" [form]=\\\"form\\\"\\r\\n      (fieldChange)=\\\"fieldChanged()\\\">\\r\\n      </formly-form>\\r\\n    </form>\"","module.exports = \".side-nav--bordered {\\n  border-right: 2px solid grey; }\\n\\n.mat-radio-button {\\n  margin-right: 15px; }\\n\\n.form__footer {\\n  bottom: 0px;\\n  z-index: -1;\\n  position: fixed;\\n  width: 100%; }\\n\\n.contact-icon {\\n  font-size: 70px;\\n  color: #aedae8; }\\n\\nformly-field-radio > div {\\n  display: inline-flex; }\\n\\nformly-field-radio > div .radio {\\n    margin-right: 35px; }\\n\\n.form-control-label {\\n  display: block; }\\n\"","import { Component, OnInit, ViewEncapsulation, OnDestroy, ChangeDetectorRef, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { FormlyFormOptions, FormlyFieldConfig, FormlyConfig } from '@ngx-formly/core';\r\n\r\n@Component({\r\n  selector: 'app-questionnaire',\r\n  templateUrl: './questionnaire.component.html',\r\n  styleUrls: ['./questionnaire.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class QuestionnaireComponent implements OnInit {\r\n  @Input() form = new FormGroup({});\r\n  @Input() options: FormlyFormOptions = {};\r\n  @Input() model: any = {};\r\n  @Input() fields: FormlyFieldConfig[];\r\n  constructor() {}\r\n  ngOnInit() {\r\n  }\r\n  fieldChanged() {\r\n    console.log(\" fieldChanged called\")\r\n\r\n  }\r\n}\r\n","module.exports = \".paddTop7px{\\r\\n    padding-top: 5px !important;\\r\\n}\\r\\n.paddTop25px{\\r\\n    padding-top: 25px !important;\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">     \\r\\n        <div class=\\\"col-md-4 col-xs-4 col-lg-4\\\">\\r\\n            <h5 class=\\\"heading paddTop7px\\\">{{ formlyFieldConfigArray.title }}</h5>\\r\\n        </div>\\r\\n        <div *ngIf='false' class=\\\"col-md-1 col-xs-1 col-lg-1\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-link editBtn \\\">Edit</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3 col-xs-3 col-lg-3\\\">\\r\\n        </div>\\r\\n\\r\\n        <div  *ngIf='false' lass=\\\"col-md-2 col-xs-2 col-lg-2\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-link editBtn \\\">Save Changes</button>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf='false' class=\\\"col-md-2 col-xs-2 col-lg-2\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-link editBtn \\\">Discard Changes</button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row mb-4\\\">\\r\\n        <div class=\\\"col-md-8 col-xs-12 col-lg-8\\\">\\r\\n            <app-questionnaire [form]=\\\"form\\\" [options]=\\\"options\\\" \\r\\n            [model]=\\\"model\\\" [fields]=\\\"fields\\\"></app-questionnaire>\\r\\n              \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\r\nimport { FormlyFieldConfigArrayCollection } from '../core';\r\nimport { CustomComponentsEnum } from '../custom-formly-fields/enums/custom-components.enum';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'section',\r\n  templateUrl: './section.component.html',\r\n  styleUrls: ['./section.component.css']\r\n})\r\nexport class SectionComponent implements OnInit, OnChanges {\r\n  form = new FormGroup({});\r\n  options: FormlyFormOptions = {};\r\n  model: any = {};\r\n  fields: FormlyFieldConfig[] = [];\r\n  isReadonly = false;\r\n  @Input() formlyFieldConfigArray: FormlyFieldConfigArrayCollection;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.fields = this.formlyFieldConfigArray.formlyFieldConfigs;\r\n    this.fields.forEach((item) => {\r\n      // /Need to add more If statements for other custom components     \r\n      if (item.type === CustomComponentsEnum.CUSTOM_PHONE \r\n        ||  item.type === CustomComponentsEnum.CUSTOM_EMAIL \r\n      //  || item.type === CustomComponentsEnum.CUSTOM_ADDRESS_FIELDS\r\n      ) {\r\n        this.model[item.key] = [{}];\r\n      }\r\n    });\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.fields = this.formlyFieldConfigArray.formlyFieldConfigs;\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card-body\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'card-body',\r\n  templateUrl: './card-body.component.html',\r\n  styleUrls: ['./card-body.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CardBodyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card-footer text-muted\\\">\\r\\n    <ng-content></ng-content>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'card-footer',\r\n  templateUrl: './card-footer.component.html',\r\n  styleUrls: ['./card-footer.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n\r\n})\r\nexport class CardFooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card-header\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'card-header',\r\n  templateUrl: './card-header.component.html',\r\n  styleUrls: ['./card-header.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n\r\n})\r\nexport class CardHeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n\r\n})\r\nexport class CardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  @Input() config: any;\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"contact-detail\\\" *ngIf='config'>\\r\\n  <div class=\\\"contact-detail__content pb-3\\\">\\r\\n    <i class=\\\"fa contact-detail__icon--chat\\\" [ngClass]='config.iconClass'></i>\\r\\n    <div class=\\\"contact-detail__role\\\">{{config.role}}</div>\\r\\n    <div class=\\\"bold\\\">{{config.name}}</div>\\r\\n    <div>\\r\\n      <a href=`mailto:${config.email}`>{{config.emailAddress}}</a>\\r\\n    </div>\\r\\n    <div>\\r\\n      {{config.phoneNumber}}</div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".contact-detail__content {\\n  background: #ffffff;\\n  text-align: center;\\n  border: 1px solid #dfdfdf;\\n  border-top: 0; }\\n\\n.contact-detail__icon {\\n  font-size: smaller;\\n  height: 20px;\\n  margin-right: 5px; }\\n\\n.contact-detail__icon--chat {\\n    font-size: 85px;\\n    color: #e6f8fe;\\n    -webkit-text-stroke: 1px #194481; }\\n\"","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'contact-detail',\r\n  templateUrl: './contact-detail.component.html',\r\n  styleUrls: ['./contact-detail.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ContactDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  @Input() config: any;\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"footer\\\" *ngIf='config'>\\r\\n  <div class=\\\"footer__contact-details\\\">\\r\\n    <i class=\\\"fa\\\" [ngClass]='config.iconClass'></i>\\r\\n    <div class=\\\"bold\\\">Contact your {{config.role}}</div>\\r\\n    <div>{{config.firstName}} {{config.lastName}}</div>\\r\\n    <div>\\r\\n      <i class=\\\"fa fa-envelope footer__contact-icon\\\"></i>\\r\\n      <a href=`mailto:${config.email}`>{{config.emailAddress}}</a>\\r\\n    </div>\\r\\n    <div>\\r\\n      <i class=\\\"fa fa-phone footer__contact-icon\\\"></i>{{config.phoneNumber}}</div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".footer {\\n  float: left; }\\n  .footer__contact-details {\\n    background: #e6f8fe;\\n    text-align: center;\\n    padding: 12px; }\\n  .footer__contact-icon {\\n    font-size: smaller;\\n    height: 20px; }\\n\"","import { Component, Input, ViewEncapsulation, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class FooterComponent implements OnChanges {\r\n\r\n  constructor() { }\r\n  @Input() config: any;\r\n  ngOnChanges() { }\r\n}\r\n","module.exports = \"<div class=\\\"table-responsive\\\">\\r\\n  <table class=\\\"table\\\">\\r\\n    <thead class=\\\"thead-dark\\\">\\r\\n      <tr>\\r\\n        <th *ngFor=\\\"let col of columns\\\">\\r\\n          {{col}}\\r\\n        </th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody class=\\\"table__body\\\">\\r\\n      <tr *ngFor=\\\"let item of gridData\\\" (click)=\\\"rowClick(item)\\\">\\r\\n        <td *ngFor=\\\"let col of item\\\" class=\\\"table-row\\\">\\r\\n          <label-value-group [config]='getRowDetails(col)'></label-value-group>\\r\\n        </td>\\r\\n        <td>\\r\\n          <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"btn-group\\\" dropdown>\\r\\n              <a id=\\\"button-config1\\\" dropdownToggle class=\\\"kebab-link\\\" aria-controls=\\\"dropdown-config1\\\">\\r\\n                <i class=\\\"fa fa-ellipsis-v\\\"></i>\\r\\n              </a>\\r\\n              <ul id=\\\"dropdown-config1\\\" *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\" aria-labelledby=\\\"button-config1\\\">\\r\\n                <li role=\\\"menuitem\\\">\\r\\n                  Action\\r\\n                </li>\\r\\n                <li role=\\\"menuitem\\\">\\r\\n                  Another action\\r\\n                </li>\\r\\n                <li role=\\\"menuitem\\\">\\r\\n                  Something else here\\r\\n                </li>\\r\\n              </ul>\\r\\n            </div>\\r\\n          </div>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\"","module.exports = \".table__body .table-row {\\n  vertical-align: middle; }\\n\"","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\nimport { BsDropdownConfig } from 'ngx-bootstrap';\r\n\r\n@Component({\r\n  selector: 'grid',\r\n  templateUrl: './grid.component.html',\r\n  styleUrls: ['./grid.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [{ provide: BsDropdownConfig, useValue: { autoClose: false } }]\r\n})\r\nexport class GridComponent implements OnInit {\r\n  gridData: any[];\r\n\r\n  constructor() { }\r\n  @Input() columns: any;\r\n  @Input() data: any; \r\n  ngOnInit() { }\r\n  getRowDetails(data) {\r\n    return Object.values(data)[0];\r\n  }\r\n  rowClick(id: any) {\r\n    // console.log(id)\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"double-header\\\">\\r\\n      <app-top-nav [config]='config.topNavConfig'></app-top-nav>\\r\\n</div>\\r\\n\"","module.exports = \".example-icon {\\n  padding: 0 14px; }\\n\\n.example-spacer {\\n  flex: 1 1 auto; }\\n\\n@media screen and (max-width: 480px) {\\n  .double-header {\\n    display: none; }\\n  .side-nav {\\n    display: block; } }\\n\\nspan.mat-content {\\n  display: block; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Input() config: any;\r\n  constructor() { }\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"<div [ngClass]='config.containerClass'>\\r\\n  <span [ngClass]='config.labelContainerClass'>\\r\\n    <i class=\\\"fa\\\" [ngClass]='config.iconClass' *ngIf='config.iconClass'></i>\\r\\n    <span [ngClass]='config.labelClass'>{{config.label}}</span>\\r\\n    <span class=\\\"badge badge-pill\\\" *ngIf='config.badgeTitle' [ngClass]='config.badgeClass'>{{config.badgeTitle}}</span>\\r\\n  </span>\\r\\n  <span [ngClass]='config.valueClass'>{{config.value}}</span>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'label-value-group',\r\n  templateUrl: './label-value-group.component.html',\r\n  styleUrls: ['./label-value-group.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LabelValueGroupComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  @Input() config: any;\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CoreModule } from '../core/core.module';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { TabsComponent } from './tabs/tabs.component';\r\nimport { TopNavComponent } from './top-nav/top-nav.component';\r\nimport { SideNavComponent } from './side-nav/side-nav.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { AccordionModule, ButtonsModule } from 'ngx-bootstrap';\r\nimport { LabelValueGroupComponent } from './label-value-group/label-value-group.component';\r\nimport { CardComponent } from './card/card.component';\r\nimport { CardHeaderComponent } from './card-header/card-header.component';\r\nimport { CardBodyComponent } from './card-body/card-body.component';\r\nimport { CardFooterComponent } from './card-footer/card-footer.component';\r\nimport { GridComponent } from './grid/grid.component';\r\nimport { TileComponent } from './tile/tile.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { ContactDetailComponent } from './contact-detail/contact-detail.component';\r\nimport { TooltipModule } from 'ngx-bootstrap';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CoreModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    AccordionModule.forRoot(),\r\n    FormsModule,\r\n    TooltipModule.forRoot()\r\n  ],\r\n  providers: [],\r\n  declarations: [\r\n    HeaderComponent,\r\n    TabsComponent,\r\n    TopNavComponent,\r\n    SideNavComponent,\r\n    FooterComponent,\r\n    LabelValueGroupComponent,\r\n    CardComponent,\r\n    CardHeaderComponent,\r\n    CardBodyComponent,\r\n    CardFooterComponent,\r\n    GridComponent,\r\n    TileComponent,\r\n    ContactDetailComponent\r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n    TabsComponent,\r\n    TopNavComponent,\r\n    SideNavComponent,\r\n    FooterComponent,\r\n    LabelValueGroupComponent,\r\n    CardComponent,\r\n    CardHeaderComponent,\r\n    CardBodyComponent,\r\n    CardFooterComponent,\r\n    GridComponent,\r\n    TileComponent,\r\n    ContactDetailComponent  \r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","module.exports = \"<div class=\\\"side-nav\\\">\\r\\n  <accordion>\\r\\n    <accordion-group *ngFor='let item of config' [isOpen]=\\\"item.id === selectedParentId\\\">\\r\\n      <div accordion-heading class=\\\"clearfix\\\">\\r\\n        <div class=\\\"row mb-0 side-nav__tab pl-3\\\">\\r\\n          <div class=\\\"col-sm-1 no-padding-left\\\">\\r\\n            <i class=\\\"fa fa-chevron-right collapsible-icon float-left pull-left\\\"></i>\\r\\n          </div> \\r\\n          <div class=\\\"col-sm-8 side-nav__heading\\\">\\r\\n            <div (click)='item.children.length === 1 ? setSelectedId(item.id, item.children[0].id, item.type): false'>\\r\\n              {{item.label}}\\r\\n            </div>\\r\\n            <span class=\\\"role\\\" *ngIf=\\\"item.subHeading\\\">{{item.subHeading}}</span>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-3 no-padding-left\\\">\\r\\n              <i *ngIf = 'item.status === status.completed'\\r\\n                [ngClass]=\\\"{'status-icon--completed fa-check': item.status === status.completed,\\r\\n                'status-icon--inprogress fa-circle': item.status === status.inProgress}\\\"\\r\\n                class=\\\"fa status-icon float-right pull-right\\\"></i>\\r\\n                <div \\r\\n                  *ngIf = 'item.status === status.inProgress'class=\\\"status-container\\\">\\r\\n                  <span class=\\\"status-text\\\">Required</span>\\r\\n                </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <ul class=\\\"list-group\\\" *ngIf = 'item.children.length > 1'>\\r\\n        <li class=\\\"list-group-item list-item d-flex justify-content-between align-items-center\\\" *ngFor='let child of item.children' \\r\\n        [ngClass]=\\\"{'active': item.id ===selectedParentId && child.id === selectedChildId && item.children.length > 1 }\\\"\\r\\n        (click) = 'setSelectedId(item.id, child.id, child.type)'>\\r\\n          <a class='child-link' routerLink=\\\"['/workflow/',item.id]\\\"> {{child.label}}</a>\\r\\n          <i *ngIf= 'child.status === status.completed'\\r\\n            [ngClass]=\\\"{'status-icon--completed fa-check': child.status === status.completed}\\\"\\r\\n              class=\\\"fa status-icon float-right pull-right\\\"></i>\\r\\n              <div \\r\\n                  *ngIf = 'item.status === status.inProgress'class=\\\"status-container\\\">\\r\\n                  <span class=\\\"status-text\\\">Required</span>\\r\\n              </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </accordion-group>\\r\\n  </accordion>\\r\\n</div>\"","module.exports = \".side-nav {\\n  border: 1px solid #eeeeee; }\\n  .side-nav .status-container {\\n    background: orange;\\n    border: solid 1px orange;\\n    position: relative;\\n    display: block;\\n    line-height: 20px;\\n    height: 22px;\\n    width: 100px;\\n    margin-left: 6px; }\\n  .side-nav .status-container .status-text {\\n      padding-left: 10px;\\n      color: white; }\\n  .side-nav .status-container:before {\\n      content: \\\"\\\";\\n      display: inline-block;\\n      position: absolute;\\n      border: 10px solid orange;\\n      border-color: transparent transparent transparent orange;\\n      top: 0px; }\\n  .side-nav .status-container:after {\\n      content: \\\"\\\";\\n      display: inline-block;\\n      position: absolute;\\n      border: 9px solid white;\\n      border-color: transparent transparent transparent white;\\n      top: 1px;\\n      left: -1px; }\\n  .side-nav .collapsible-icon {\\n    -webkit-text-stroke: 2px white; }\\n  .side-nav .status-icon {\\n    position: absolute;\\n    -webkit-transform: translate(0, -50%);\\n            transform: translate(0, -50%);\\n    top: 50%;\\n    right: 20%; }\\n  .side-nav .status-icon--inprogress {\\n      color: orange; }\\n  .side-nav .status-icon--completed {\\n      color: #1568a9;\\n      -webkit-text-stroke: 1px white; }\\n  .side-nav__heading {\\n    line-height: 100%; }\\n  .side-nav .role {\\n    font-size: 0.7rem;\\n    color: darkgrey; }\\n  .side-nav .card {\\n    border: 0; }\\n  .side-nav .card-header {\\n    background-color: white;\\n    cursor: pointer;\\n    min-height: 65px;\\n    max-height: 65px; }\\n  .side-nav .card-body {\\n    padding: 0; }\\n  .side-nav .list-item {\\n    padding-left: 18%;\\n    padding-right: 0;\\n    cursor: pointer;\\n    min-height: 65px;\\n    border: 0;\\n    background: #fafafa;\\n    border: 1px solid #e5e5e5; }\\n  .side-nav .list-item .status-container {\\n      width: 83px; }\\n  .side-nav .list-item .status-container:after {\\n      border: 9px solid #fafafa;\\n      border-color: transparent transparent transparent #fafafa; }\\n  .side-nav .list-item:hover {\\n      background: #e6f8fe; }\\n  .side-nav .list-item:hover .collapsible-icon {\\n        -webkit-text-stroke: 1px #e6f8fe; }\\n  .side-nav .list-item:hover .status-container:after {\\n        border: 9px solid #e6f8fe;\\n        border-color: transparent transparent transparent #e6f8fe; }\\n  .side-nav .list-item.active {\\n      padding-left: 17%;\\n      background: #e6f8fe;\\n      color: black;\\n      font-weight: bold;\\n      border-left: 5px solid #005AA1; }\\n  .side-nav .list-item.active a {\\n        font-weight: bold; }\\n  .side-nav .list-item.active i.status-icon--completed {\\n        -webkit-text-stroke: 1px #e6f8fe; }\\n  .side-nav .list-item.active .status-container {\\n        width: 83px; }\\n  .side-nav .list-item.active .status-container .status-text {\\n          font-weight: 400; }\\n  .side-nav .list-item.active .status-container:after {\\n        border: 9px solid #e6f8fe;\\n        border-color: transparent transparent transparent #e6f8fe; }\\n  .side-nav .list-item .status-icon {\\n      position: absolute;\\n      right: 6%; }\\n  .child-link {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 15px;\\n  font-weight: 400; }\\n  .panel-open .collapsible-icon {\\n  -webkit-transform: rotate(90deg);\\n          transform: rotate(90deg); }\\n\"","import { Component, OnInit, Input, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\r\nimport { TASK_STATUSES } from '../../core/constants/application-request.constants';\r\n\r\n@Component({\r\n  selector: 'app-side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n  styleUrls: ['./side-nav.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SideNavComponent implements OnInit {\r\n  oneAtATime = true;\r\n  menuItemConfig: any;\r\n  @Input() config: any;\r\n  @Input() selectedParentId: any;\r\n  @Input() selectedChildId: any;\r\n  @Output() actions: any = new EventEmitter();\r\n  workFlowId: any;\r\n  taskId: any;\r\n  type: any;\r\n  selectedId: any;\r\n  status: any;\r\n  constructor() { }\r\n  ngOnInit() {\r\n    this.status = TASK_STATUSES;\r\n  }\r\n  setSelectedId(parentId, childId, type) {\r\n    this.selectedParentId = parentId;\r\n    this.selectedChildId = childId;\r\n    this.actions.emit({ parentId, childId, type });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"tabs\\\">\\r\\n    <span *ngIf=\\\"config.iconClass\\\">\\r\\n        <i class=\\\"fa nav--icon\\\" [ngClass]=\\\"config.iconClass\\\"></i>\\r\\n    </span>\\r\\n    <button *ngIf=\\\"config.title\\\" class=\\\"btn btn-link\\\">\\r\\n        {{config.title}}\\r\\n    </button>\\r\\n</div>\"","module.exports = \".tabs .example-icon {\\n  padding: 0 14px; }\\n\\n.tabs .example-spacer {\\n  flex: 1 1 auto; }\\n\\n.tabs .nav--icon {\\n  margin: 0 20px 0 20px;\\n  color: white; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: './tabs.component.html',\r\n  styleUrls: ['./tabs.component.scss']\r\n})\r\nexport class TabsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  @Input() config: any;\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"tile\\\">\\r\\n  <div class=\\\" tile_content row\\\">\\r\\n    <div class=\\\"col-md-9 m-0 p-0\\\">\\r\\n      <p class=\\\"bold\\\">\\r\\n        {{config.heading}}\\r\\n      </p>\\r\\n      <p>\\r\\n        <span>{{config.subHeading}}</span>\\r\\n      </p>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3 tile_icon-container\\\">\\r\\n      <i class=\\\"fa tile_icon\\\" aria-hidden=\\\"true\\\"\\r\\n      [ngClass]='config.iconClass'></i>\\r\\n      <span class=\\\"col-md-3 tile_badge-class\\\" *ngIf='config.badgeText'>{{config.badgeText}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".tile_content {\\n  width: 100%;\\n  background: white;\\n  border: 1px solid #dacdcd;\\n  outline: none;\\n  padding: 6px;\\n  text-align: left;\\n  margin: 0;\\n  font-size: 14px; }\\n\\n.tile_icon-container {\\n  text-align: center;\\n  padding: 0px; }\\n\\n.tile_icon-container .tile_icon {\\n    position: absolute;\\n    -webkit-transform: translate(0, -50%);\\n            transform: translate(0, -50%);\\n    top: 50%; }\\n\\n.tile_badge-class {\\n  border: 1px solid;\\n  border-radius: 10px;\\n  text-align: center; }\\n\\n.tile p {\\n  margin: 0; }\\n\"","import { Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tile',\r\n  templateUrl: './tile.component.html',\r\n  styleUrls: ['./tile.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TileComponent implements OnInit {\r\n  constructor() { }\r\n  @Input() config: any;\r\n  ngOnInit() {\r\n  }\r\n  getIconColor() {\r\n    if (this.config && this.config.status === 'completed') {\r\n      return 'green';\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"top-nav\\\">\\r\\n  <nav class=\\\"navbar navbar-dark navbar--primary\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\r\\n    <img src=\\\"/assets/image/Citi.png\\\" height=\\\"45\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"\\\">\\r\\n  </a>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    <app-tabs *ngFor='let tabs of config' [config]='tabs'></app-tabs>\\r\\n  </nav>\\r\\n</div>\"","module.exports = \".top-nav .example-icon {\\n  padding: 0 14px; }\\n\\n.top-nav .example-spacer {\\n  flex: 1 1 auto; }\\n\\n.top-nav .navbar--primary {\\n  background: #0d4061; }\\n\\n.top-nav .navbar-brand {\\n  color: white !important; }\\n\\n.top-nav .mat-icon {\\n  cursor: pointer; }\\n\\n.top-nav .btn-link {\\n  color: white; }\\n\"","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-top-nav',\r\n  templateUrl: './top-nav.component.html',\r\n  styleUrls: ['./top-nav.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TopNavComponent implements OnInit {\r\n  constructor() { }\r\n  @Input() config: any;\r\n  @Input() sideNavOpen: any;\r\n  ngOnInit() {\r\n  }\r\n  toggleSideNav() {\r\n    this.sideNavOpen = !this.sideNavOpen;\r\n  }\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nexport enum ActionTypes {\r\n    GET_APPLICATION_REQUEST = '[App State] Get Application Request',\r\n    GET_APPLICATION_REQUEST_SUCCESS = '[App State] Get Application Request Success',\r\n    GET_APPLICATION_REQUEST_FAIL = '[App State] Get Application Request Failure',\r\n    CLEAR_APPLICATION_REQUEST = '[App State] Clear Application Request',\r\n    GET_APPLICATION_REQUEST_WORKFLOWS = '[App State] Get Application Request Workflows',\r\n    GET_APPLICATION_REQUEST_WORKFLOWS_SUCCESS = '[App State] Get Application Request Workflows Success',\r\n    GET_APPLICATION_REQUEST_WORKFLOWS_FAILURE = '[App State] Get Application Request Workflows Failure',\r\n    DETERMINE_PENDING_TASK_OF_APPLICATION_REQUEST = '[App State] Determine pending task of application request',\r\n    GET_APPLICATION_REQUEST_TASK = '[App State] Get Application request task',\r\n    GET_APPLICATION_REQUEST_TASK_SUCCESS = '[App State] Get Application request task success',\r\n    GET_APPLICATION_REQUEST_TASK_FAILURE = '[App State] Get Application request task failure'    \r\n    // SET_APPLICATION_REQUEST_TASK = '[App State] Select Application request task',\r\n    // BUILD_NAVIGATION_CONFIG = '[Some State] Build Navigation Config',\r\n    // SELECT_NAVIGATION_ITEM = '[Some State] Select Navigation Item',\r\n}\r\n\r\nexport class GetApplicationRequest implements Action {\r\n    readonly type = ActionTypes.GET_APPLICATION_REQUEST;\r\n    constructor(public payload: string) {\r\n    }\r\n}\r\nexport class GetApplicationRequestSuccess implements Action {\r\n    readonly type = ActionTypes.GET_APPLICATION_REQUEST_SUCCESS;\r\n    constructor(public payload: any) {\r\n    }\r\n}\r\nexport class GetApplicationRequestFailure implements Action {\r\n    readonly type = ActionTypes.GET_APPLICATION_REQUEST_FAIL;\r\n    constructor(public payload: any) {}\r\n}\r\nexport class ClearApplicationRequest implements Action {\r\n    readonly type = ActionTypes.CLEAR_APPLICATION_REQUEST;\r\n    constructor() { }\r\n}\r\nexport type ApplicationActions = GetApplicationRequest\r\n    | GetApplicationRequestFailure\r\n    | GetApplicationRequestSuccess\r\n    | ClearApplicationRequest;","import * as questionnaireActions from './questionnaire.actions';\r\nimport * as userActions  from './user-info.actions';\r\n\r\nexport{\r\n    questionnaireActions,\r\n    userActions,\r\n};","import { Action } from '@ngrx/store';\r\nimport { Task, QuestionaireDeltaRequest, QuestionaireDeltaResponse, QuestionaireDeltaError, FormlyFieldConfigArrayCollection, TaskRequest } from '../../core/models';\r\nimport { FormlyFieldConfig } from '@ngx-formly/core';\r\n\r\nexport enum ActionTypes {\r\n    /// Current Task Actions\r\n    GET_CURRENT_TASK = '[App State] Get Current Task',\r\n    GET_CURRENT_TASK_SUCCESS = '[App State] Get Current Task Success',\r\n    GET_CURRENT_TASK_FAIL = '[App State] Get Current Task Fail',\r\n\r\n    ///Formly Parser Actions\r\n    ///Todo: Remove this  \r\n    GET_CURRENT_FORMLY_CONFIG = '[App State] Get Current formly config',\r\n    GET_CURRENT_FORMLY_CONFIG_SUCCESS = '[App State] Get Current formly config Success',\r\n    GET_CURRENT_FORMLY_CONFIG_FAIL = '[App State] Get Current formly config Failure',\r\n\r\n    ///Delta Field Change Actions\r\n    GET_CURRENT_FIELD_CHANGE_DELTA = '[App State] Get Current Field Change Trigger',\r\n    GET_CURRENT_FIELD_CHANGE_DELTA_SUCCESS = '[App State] Get Current Field Change Trigger Success',\r\n    GET_CURRENT_FIELD_CHANGE_DELTA_FAIL = '[App State] Get Current Field Change Trigger Failure',\r\n\r\n    ///Merge Delta Field Change and Current Task\r\n    MERGE_DELTA_FIELD_CHANGE_DELTA_AND_CURRENT_TASK = '[App State] Merge Field Change Delta And Current Task',\r\n    MERGE_DELTA_FIELD_CHANGE_DELTA_AND_CURRENT_TASK_SUCCESS = '[App State] Merge Field Change Delta And Current Task Success',\r\n    MERGE_DELTA_FIELD_CHANGE_DELTA_AND_CURRENT_TASK_FAIL = '[App State] Merge Field Change Delta And Current Task Failure',\r\n\r\n\r\n    ///Update Current Task\r\n    UPDATE_CURRENT_TASK = '[App State] Update Current Task',\r\n\r\n    ///QuestionnaireErrors list\r\n    SET_QUESTIONNAIRE_ERRORS = '[App State] Set Current Questionnaire Errors List',\r\n    DELETE_QUESTIONNAIRE_ERRORS_BY_QUESTION_ID = '[App State] Delete Questionnaire Error From  Questionnaire Errors List By Questionnaire Id ',\r\n\r\n\r\n    ///Reset Questionnaire State\r\n    RESET_QUESTIONNAIRE_STATE_TO_INTIAL_STATE = '[App State] Reset Questionnaire State To Intial State',\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ///Formly Parser Actions\r\n    GET_CURRENT_QUESTIONNAIRE_FORMLY_CONFIG = '[App State] Get Current Questionnaire formly config',\r\n    GET_CURRENT_QUESTIONNAIRE_FORMLY_CONFIG_SUCCESS = '[App State] Get Current Questionnaire formly config Success',\r\n    GET_CURRENT_QUESTIONNAIRE_FORMLY_CONFIG_FAIL = '[App State] Get Current  Questionnaire formly config Failure',\r\n\r\n    ///Set Current Question Id\r\n    SET_CURRENT_QUESTION_ID = \"[App State] Set The Current Question Id\"\r\n}\r\n\r\nexport class GetCurrentTask implements Action {\r\n    readonly type = ActionTypes.GET_CURRENT_TASK\r\n    constructor(public payload: TaskRequest) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class GetCurrentTaskSuccess implements Action {\r\n    readonly type = ActionTypes.GET_CURRENT_TASK_SUCCESS\r\n    constructor(public payload: Task) {\r\n        this.payload = payload\r\n    }\r\n}\r\n\r\nexport class GetCurrentTaskFailure implements Action {\r\n    readonly type = ActionTypes.GET_CURRENT_TASK_FAIL\r\n    constructor(public payload) {\r\n        this.payload = payload\r\n    }\r\n}\r\n\r\nexport class GetCurrentFormlyConfig implements Action {\r\n    readonly type = ActionTypes.GET_CURRENT_FORMLY_CONFIG\r\n    constructor(public payload: { task: Task, currentQuestionId: string }) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class GetCurrentFormlyConfigSuccess implements Action {\r\n    readonly type = ActionTypes.GET_CURRENT_FORMLY_CONFIG_SUCCESS\r\n    constructor(public payload: FormlyFieldConfig[]) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class GetCurrentFormlyConfigFailure implements Action {\r\n    readonly type = ActionTypes.GET_CURRENT_FORMLY_CONFIG_FAIL\r\n    constructor(public payload) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class GetCurrentFieldChangeDelta implements Action {\r\n    readonly type = ActionTypes.GET_CURRENT_FIELD_CHANGE_DELTA\r\n    constructor(public payload: QuestionaireDeltaRequest) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class GetCurrentFieldChangeDeltaSuccess implements Action {\r\n    readonly type = ActionTypes.GET_CURRENT_FIELD_CHANGE_DELTA_SUCCESS\r\n\r\n    constructor(public payload: Task) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class GetCurrentFieldChangeDeltaFailure implements Action {\r\n    readonly type = ActionTypes.GET_CURRENT_FIELD_CHANGE_DELTA_FAIL\r\n    constructor(public payload) {\r\n        this.payload = payload\r\n    }\r\n}\r\n\r\nexport class MergeDeltaFieldChangeAndCurrentTask implements Action {\r\n    readonly type = ActionTypes.MERGE_DELTA_FIELD_CHANGE_DELTA_AND_CURRENT_TASK\r\n    constructor(public payload: { currentTask: Task, delta: QuestionaireDeltaResponse, model: any }) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class MergeDeltaFieldChangeAndCurrentTaskSuccess implements Action {\r\n    readonly type = ActionTypes.MERGE_DELTA_FIELD_CHANGE_DELTA_AND_CURRENT_TASK_SUCCESS\r\n    constructor(public payload: Task) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class MergeDeltaFieldChangeAndCurrentTaskFailure implements Action {\r\n    readonly type = ActionTypes.MERGE_DELTA_FIELD_CHANGE_DELTA_AND_CURRENT_TASK_FAIL\r\n    constructor(public payload) {\r\n        this.payload = payload\r\n    }\r\n}\r\n\r\nexport class UpdateCurrentTask implements Action {\r\n    readonly type = ActionTypes.UPDATE_CURRENT_TASK\r\n    constructor(public payload: Task) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class SetQuestionnaireErrors implements Action {\r\n    readonly type = ActionTypes.SET_QUESTIONNAIRE_ERRORS\r\n    constructor(public payload: QuestionaireDeltaError[]) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class DeleteQuestionnaireErrorByQuestionId implements Action {\r\n    readonly type = ActionTypes.DELETE_QUESTIONNAIRE_ERRORS_BY_QUESTION_ID\r\n    constructor(public payload: string) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class ResetQuestionnaireState implements Action {\r\n    readonly type = ActionTypes.RESET_QUESTIONNAIRE_STATE_TO_INTIAL_STATE\r\n\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport class GetCurrentQuestionnaireFormlyConfig implements Action {\r\n    readonly type = ActionTypes.GET_CURRENT_QUESTIONNAIRE_FORMLY_CONFIG\r\n    constructor(public payload: {\r\n        task: Task, currentQuestionId: string,\r\n        requestId: string, workflowId: string, taskId: string\r\n    }) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class GetCurrentQuestionnaireFormlyConfigSuccess implements Action {\r\n    readonly type = ActionTypes.GET_CURRENT_QUESTIONNAIRE_FORMLY_CONFIG_SUCCESS\r\n    constructor(public payload: FormlyFieldConfigArrayCollection[]) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class GetCurrentQuestionnaireFormlyConfigFailure implements Action {\r\n    readonly type = ActionTypes.GET_CURRENT_QUESTIONNAIRE_FORMLY_CONFIG_FAIL\r\n    constructor(public payload) {\r\n        this.payload = payload\r\n    }\r\n}\r\n\r\nexport class SetCurrentQuestionId implements Action {\r\n    readonly type = ActionTypes.SET_CURRENT_QUESTION_ID\r\n    constructor(public payload: string) {\r\n        this.payload = payload\r\n    }\r\n}\r\n\r\nexport type QuesitonnaireActions = GetCurrentTask\r\n    | GetCurrentTaskSuccess\r\n    | GetCurrentTaskFailure\r\n    | GetCurrentFormlyConfig\r\n    | GetCurrentFormlyConfigSuccess\r\n    | GetCurrentFormlyConfigFailure\r\n    | GetCurrentFieldChangeDelta\r\n    | GetCurrentFieldChangeDeltaSuccess\r\n    | GetCurrentFieldChangeDeltaFailure\r\n    | MergeDeltaFieldChangeAndCurrentTask\r\n    | MergeDeltaFieldChangeAndCurrentTaskSuccess\r\n    | MergeDeltaFieldChangeAndCurrentTaskFailure\r\n    | UpdateCurrentTask\r\n    | SetQuestionnaireErrors\r\n    | DeleteQuestionnaireErrorByQuestionId\r\n    | ResetQuestionnaireState\r\n    ////////////////////////////////////////////\r\n    | GetCurrentQuestionnaireFormlyConfig\r\n    | GetCurrentQuestionnaireFormlyConfigSuccess\r\n    | GetCurrentQuestionnaireFormlyConfigFailure\r\n    | SetCurrentQuestionId\r\n    ;","import { Action } from \"@ngrx/store\";\r\nimport { NavigationExtras } from \"@angular/router\";\r\n\r\nexport enum ActionTypes {\r\n    ROUTER_GO = '[Router] Go',\r\n    ROUTER_BACK = '[Router] Back',\r\n    ROUTER_FORWARD = '[Router] Forward',\r\n    ROUTE_CHANGE = '[Router] Route Change',\r\n    CLEAR_ACTIVE_APPLICATION = '[App State] Clear Active Application from List',\r\n    SORT_APPLICATIONS = '[App State] Sort Applications',\r\n    APPLICATIONS_SORT_SUCCESS = '[App State] Applications Sort Success'\r\n}\r\n\r\nexport class RouterGo implements Action {\r\n    readonly type = ActionTypes.ROUTER_GO;\r\n\r\n    constructor(\r\n        public payload: {\r\n            path: any[];\r\n            queryParams?: object;\r\n            extras?: NavigationExtras;\r\n        }\r\n    ) { }\r\n}\r\n\r\nexport class RouterBack implements Action {\r\n    readonly type = ActionTypes.ROUTER_BACK;\r\n}\r\n\r\nexport class RouterForward implements Action {\r\n    readonly type = ActionTypes.ROUTER_FORWARD;\r\n}\r\n\r\nexport class RouteChange implements Action {\r\n    readonly type = ActionTypes.ROUTE_CHANGE;\r\n    constructor(public payload: { params: any, path: string }) { }\r\n}\r\n\r\nexport type RouterActions = RouterBack | RouterForward | RouterGo | RouteChange","import { Action } from '@ngrx/store';\r\n\r\nexport enum ActionTypes {\r\n    GET_USER = '[userFeature]  Get User',\r\n    GET_USER_SUCCESS = '[userFeature]  Get User Success',\r\n    GET_USER_FAIL = '[userFeature]  Get User Failure',\r\n    GET_USER_CONTACT_PERSON = '[userFeature] Get User Contact Person',\r\n    GET_USER_CONTACT_PERSON_SUCCESS = '[userFeature] Get User Contact Person Success',\r\n    GET_USER_CONTACT_PERSON_FAILURE = '[userFeature] Get User Contact Person Failure',\r\n}\r\n\r\nexport class GetUser implements Action {\r\n    readonly type = ActionTypes.GET_USER\r\n    constructor() { }\r\n}\r\nexport class GetUserSuccess implements Action {\r\n    readonly type = ActionTypes.GET_USER_SUCCESS\r\n    constructor(public payload) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class GetUserFailure implements Action {\r\n    readonly type = ActionTypes.GET_USER_FAIL\r\n    constructor(public payload) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class GetUserContactPersonSuccess implements Action {\r\n    readonly type = ActionTypes.GET_USER_CONTACT_PERSON_SUCCESS\r\n    constructor(public payload) {\r\n        this.payload = payload\r\n    }\r\n}\r\nexport class GetUserContactPerson implements Action {\r\n    readonly type = ActionTypes.GET_USER_CONTACT_PERSON\r\n    constructor() {\r\n    }\r\n}\r\nexport class GetUserContactPersonFailure implements Action {\r\n    readonly type = ActionTypes.GET_USER_CONTACT_PERSON_FAILURE\r\n    constructor(public payload) {\r\n        this.payload = payload\r\n    }\r\n}\r\n\r\nexport type UserActions = GetUser\r\n    | GetUserSuccess\r\n    | GetUserFailure\r\n    | GetUserContactPerson\r\n    | GetUserContactPersonFailure\r\n    | GetUserContactPersonSuccess;","import { Action } from '@ngrx/store';\r\n\r\nexport enum ActionTypes {\r\n    GET_APPLICATION_REQUEST_WORKFLOWS = '[App State] Get Application Request Workflows',\r\n    GET_APPLICATION_REQUEST_WORKFLOWS_SUCCESS = '[App State] Get Application Request Workflows Success',\r\n    GET_APPLICATION_REQUEST_WORKFLOWS_FAILURE = '[App State] Get Application Request Workflows Failure',\r\n    DETERMINE_PENDING_TASK_OF_APPLICATION_REQUEST = '[App State] Determine pending task of application request',\r\n    GET_APPLICATION_REQUEST_TASK = '[App State] Get Application request task',\r\n    GET_APPLICATION_REQUEST_TASK_SUCCESS = '[App State] Get Application request task success',\r\n    GET_APPLICATION_REQUEST_TASK_FAILURE = '[App State] Get Application request task failure',\r\n    SET_ACTIVE_TASK = '[App State] Set Active Task'\r\n    // SET_APPLICATION_REQUEST_TASK = '[App State] Select Application request task',\r\n    // BUILD_NAVIGATION_CONFIG = '[Some State] Build Navigation Config',\r\n    // SELECT_NAVIGATION_ITEM = '[Some State] Select Navigation Item',\r\n}\r\n\r\nexport class GetApplicationWorkflows implements Action {\r\n    readonly type = ActionTypes.GET_APPLICATION_REQUEST_WORKFLOWS;\r\n    constructor(public payload) {\r\n        this.payload = payload;\r\n    }\r\n}\r\n\r\nexport class GetApplicationWorkflowsSuccess implements Action {\r\n    readonly type = ActionTypes.GET_APPLICATION_REQUEST_WORKFLOWS_SUCCESS;\r\n    constructor(public payload) {\r\n        this.payload = payload;\r\n    }\r\n}\r\n\r\nexport class GetApplicationWorkflowsFailure implements Action {\r\n    readonly type = ActionTypes.GET_APPLICATION_REQUEST_WORKFLOWS_FAILURE;\r\n    constructor(public payload) {\r\n        this.payload = payload;\r\n    }\r\n}\r\nexport class DeterminePendingTaskOfApplication implements Action {\r\n    readonly type = ActionTypes.DETERMINE_PENDING_TASK_OF_APPLICATION_REQUEST;\r\n    constructor(public payload) {\r\n        this.payload = payload;\r\n     }\r\n}\r\nexport class GetApplicationTask implements Action {\r\n    readonly type = ActionTypes.GET_APPLICATION_REQUEST_TASK;\r\n    constructor(public payload) {\r\n        this.payload = payload;\r\n    }\r\n}\r\nexport class GetApplicationTaskSuccess implements Action {\r\n    readonly type = ActionTypes.GET_APPLICATION_REQUEST_TASK_SUCCESS;\r\n    constructor(public payload) {\r\n        this.payload = payload;\r\n    }\r\n}\r\nexport class GetApplicationTaskFailure implements Action {\r\n    readonly type = ActionTypes.GET_APPLICATION_REQUEST_TASK_FAILURE;\r\n    constructor(public payload) {\r\n        this.payload = payload;\r\n    }\r\n}\r\nexport class SetActiveTask implements Action {\r\n    readonly type = ActionTypes.SET_ACTIVE_TASK;\r\n    constructor(public payload) {\r\n        this.payload = payload;\r\n    }\r\n}\r\nexport type WorkflowsActions = GetApplicationTask\r\n    | GetApplicationTaskFailure\r\n    | GetApplicationTaskSuccess\r\n    | DeterminePendingTaskOfApplication\r\n    | GetApplicationWorkflows\r\n    | GetApplicationWorkflowsFailure\r\n    | GetApplicationWorkflowsSuccess\r\n    | SetActiveTask;","import { NgModule, InjectionToken } from '@angular/core';\r\nimport { StoreModule, ActionReducerMap } from '@ngrx/store';\r\nimport { AppState, rootReducers, CustomSerializer, } from './reducers';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { environment } from '../../environments/environment';\r\nimport { effects } from './effects';\r\nimport { RouterStateSerializer, StoreRouterConnectingModule } from '@ngrx/router-store';\r\n\r\nexport const REDUCER_TOKEN = new InjectionToken<\r\n  ActionReducerMap<AppState>\r\n  >('Registered Reducers');\r\n\r\nexport function getReducers() {\r\n  return rootReducers;\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    StoreModule.forRoot(REDUCER_TOKEN),\r\n    EffectsModule.forRoot(effects),\r\n    !environment.production ? StoreDevtoolsModule.instrument({\r\n      name: 'Citi DDO UI',\r\n      maxAge: 25,\r\n      logOnly: environment.production\r\n    }) : [],\r\n    StoreRouterConnectingModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: REDUCER_TOKEN,\r\n      useFactory: getReducers\r\n    },\r\n    {\r\n      provide: RouterStateSerializer,\r\n      useClass: CustomSerializer\r\n    }\r\n  ],\r\n})\r\n\r\nexport class AppStoreModule { }","import { Injectable } from '@angular/core';\r\nimport { ApplicationRequestService } from '../../core/services/application-request.service';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport {\r\n    ActionTypes,\r\n    GetApplicationRequestSuccess,\r\n    GetApplicationRequestFailure,\r\n    GetApplicationRequest\r\n} from '../actions/application.actions';\r\nimport { switchMap, map, catchError, filter } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport * as fromRouterActions from '../actions/router.actions';\r\n\r\n@Injectable()\r\nexport class ApplicationRequestEffects {\r\n\r\n    @Effect() loadApplicationRequestEffect = this.actions$.pipe(\r\n        ofType(fromRouterActions.ActionTypes.ROUTE_CHANGE),\r\n        filter((routeChangeAction: fromRouterActions.RouteChange) =>\r\n            routeChangeAction.payload.path === 'applications/:applicationId'),\r\n        map((action) => {\r\n            const { applicationId } = action.payload.params;\r\n            return new GetApplicationRequest(applicationId)\r\n        })\r\n    );\r\n    @Effect() getApplicationRequestEffect = this.actions$.pipe(\r\n        ofType(ActionTypes.GET_APPLICATION_REQUEST),\r\n        switchMap(\r\n            (action: GetApplicationRequest) =>\r\n                this.applicationRequestService.getApplicationRequest(action.payload)\r\n                    .pipe(\r\n                        map(\r\n                            (application) => {\r\n                                return new GetApplicationRequestSuccess(application);\r\n                            }),\r\n                        catchError(\r\n                            (err) => of(new GetApplicationRequestFailure(err))\r\n                        )\r\n                    )\r\n        ));\r\n    constructor(\r\n        private applicationRequestService: ApplicationRequestService,\r\n        private actions$: Actions\r\n    ) { }\r\n}\r\n","import { QuestionnaireEffectsService } from './questionnaire-effects.service';\r\nimport { ApplicationRequestEffects } from './application-request.effects';\r\nimport { UserInfoEffectsService } from './user-info.effects';\r\nimport { RouterEffects } from './router.effects';\r\nimport { ApplicationWorkflowsEffects } from './workflows.effects';\r\nimport { TasksEffects } from './tasks.effects';\r\n\r\nexport const effects: any[] = [\r\n    QuestionnaireEffectsService,\r\n    ApplicationRequestEffects,\r\n    UserInfoEffectsService,\r\n    RouterEffects,\r\n    ApplicationWorkflowsEffects,\r\n    TasksEffects\r\n]\r\n\r\nexport * from './questionnaire-effects.service';\r\nexport * from './user-info.effects';\r\nexport * from './questionnaire-effects.service';\r\nexport * from './application-request.effects';\r\nexport * from './router.effects';\r\nexport * from './workflows.effects';\r\nexport * from './tasks.effects';","import { Injectable } from '@angular/core';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport {\r\n  ActionTypes, GetCurrentTask, GetCurrentTaskSuccess, GetCurrentTaskFailure,\r\n  GetCurrentFormlyConfig, GetCurrentFormlyConfigSuccess, GetCurrentFieldChangeDelta,\r\n  GetCurrentFieldChangeDeltaSuccess, GetCurrentFieldChangeDeltaFailure, MergeDeltaFieldChangeAndCurrentTask, MergeDeltaFieldChangeAndCurrentTaskSuccess, MergeDeltaFieldChangeAndCurrentTaskFailure, UpdateCurrentTask, GetCurrentQuestionnaireFormlyConfigSuccess, GetCurrentQuestionnaireFormlyConfigFailure, GetCurrentQuestionnaireFormlyConfig\r\n}\r\n  from '../actions/questionnaire.actions';\r\nimport { switchMap, map, catchError } from 'rxjs/operators';\r\nimport { QuestionnaireService, NgxFormlyParserService, ApiService } from '../../core/services';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { QuestionaireDeltaResponse } from '../../core/models';\r\nimport { of } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class QuestionnaireEffectsService {\r\n\r\n\r\n  @Effect() getCurrentTask = this.actions$.pipe(\r\n    ofType(ActionTypes.GET_CURRENT_TASK),\r\n    switchMap(\r\n      (action: GetCurrentTask) => this.questionnaireService.getCurrentTask(action.payload)\r\n        .pipe(\r\n          map((task) => (new GetCurrentTaskSuccess(task))\r\n          ),\r\n          catchError(\r\n            (err) => of(new GetCurrentTaskFailure(err))\r\n          )\r\n        )\r\n    )\r\n  )\r\n\r\n  // @Effect() getCurrentQuestionnaireConfig = this.actions$.pipe(\r\n  //   ofType(ActionTypes.GET_CURRENT_FORMLY_CONFIG),\r\n  //   switchMap(\r\n  //     (action: GetCurrentFormlyConfig) => this.ngxFormlyParserService\r\n  //       .getFormlyFieldConfigFromTask(action.payload.task, action.payload.currentQuestionId)\r\n\r\n  //       .pipe(\r\n  //         map((formlyConfig) => (new GetCurrentFormlyConfigSuccess(formlyConfig))\r\n  //         ),\r\n  //         catchError(\r\n  //           (err) => of(new GetCurrentTaskFailure(err))\r\n  //         )\r\n  //       )\r\n  //   )\r\n  // )\r\n\r\n  @Effect() getCurrentQuestionnaireDelta = this.actions$.pipe(\r\n    ofType(ActionTypes.GET_CURRENT_FIELD_CHANGE_DELTA),\r\n    switchMap(\r\n      (action: GetCurrentFieldChangeDelta) =>\r\n\r\n      \r\n        this.questionnaireService.getFieldChangeDelta(action.payload)\r\n          .pipe(\r\n            map((currentTask) => {\r\n              return (new GetCurrentFieldChangeDeltaSuccess(currentTask))\r\n\r\n            }\r\n            ),\r\n            catchError(\r\n              (err) => of(new GetCurrentFieldChangeDeltaFailure(err))\r\n            )\r\n          )\r\n    )\r\n  )\r\n\r\n  // @Effect() getMergedCurrentTaskWithDelta = this.actions$.pipe(\r\n  //   ofType(ActionTypes.MERGE_DELTA_FIELD_CHANGE_DELTA_AND_CURRENT_TASK),\r\n  //   switchMap(\r\n  //     (action: MergeDeltaFieldChangeAndCurrentTask) =>\r\n  //       this.ngxFormlyParserService.mergeFieldChangeDeltaAndCurrentcurrentTask(\r\n  //         action.payload.currentTask,\r\n  //         action.payload.delta,\r\n  //         action.payload.model)\r\n\r\n  //         .pipe(\r\n  //           map((mergedCurrentTaskWithDelta) => (new MergeDeltaFieldChangeAndCurrentTaskSuccess(mergedCurrentTaskWithDelta))\r\n  //           ),\r\n  //           catchError(\r\n  //             (err) => of(new MergeDeltaFieldChangeAndCurrentTaskFailure(err))\r\n  //           )\r\n  //         )\r\n  //   )\r\n  // )\r\n  //////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  @Effect() getCurrentQuestionnaireConfig = this.actions$.pipe(\r\n    ofType(ActionTypes.GET_CURRENT_QUESTIONNAIRE_FORMLY_CONFIG),\r\n    switchMap(\r\n      (action: GetCurrentQuestionnaireFormlyConfig) => this.ngxFormlyParserService\r\n        .getFormlyFieldConfigArrayCollectionFromTask\r\n        (action.payload.task,\r\n        action.payload.currentQuestionId,\r\n        action.payload.requestId,\r\n        action.payload.workflowId,\r\n        action.payload.taskId\r\n\r\n        )\r\n\r\n        .pipe(\r\n          map((FormlyFieldConfigArrayCollections) => (new GetCurrentQuestionnaireFormlyConfigSuccess(FormlyFieldConfigArrayCollections))\r\n          ),\r\n          catchError(\r\n            (err) => of(new GetCurrentQuestionnaireFormlyConfigFailure(err))\r\n          )\r\n        )\r\n    )\r\n  )\r\n\r\n\r\n\r\n  constructor(private actions$: Actions,\r\n    private questionnaireService: QuestionnaireService,\r\n    private ngxFormlyParserService: NgxFormlyParserService\r\n  ) { }\r\n\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { Router, ActivationEnd } from \"@angular/router\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, tap, filter } from \"rxjs/operators\";\r\nimport { RouterGo, RouteChange } from \"../actions/router.actions\";\r\nimport { Location } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class RouterEffects {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private router: Router,\r\n        private location: Location,\r\n        private store: Store<any>\r\n    ) {\r\n        this.listenToRouter();\r\n    }\r\n\r\n    @Effect({ dispatch: false })\r\n    navigate$ = this.actions$.pipe(\r\n        ofType('[Router] Go'),\r\n        map((action: RouterGo) => action.payload),\r\n        tap(\r\n            ({ path, queryParams, extras }) =>\r\n                this.router.navigate(path, { queryParams, ...extras })\r\n        )\r\n    );\r\n\r\n    @Effect({ dispatch: false })\r\n    navigateBack$ = this.actions$.pipe(ofType('[Router] Back'), tap(() => this.location.back()));\r\n\r\n    @Effect({ dispatch: false })\r\n    navigateForward$ = this.actions$.pipe(\r\n        ofType('[Router] Forward'),\r\n        tap(() => this.location.forward())\r\n    );\r\n\r\n    private listenToRouter() {\r\n        this.router.events.pipe(\r\n            filter(event => event instanceof ActivationEnd)\r\n        ).subscribe((event: ActivationEnd) =>\r\n            this.store.dispatch(new RouteChange({\r\n                params: { ...event.snapshot.params },\r\n                path: event.snapshot.routeConfig.path\r\n            }))\r\n        );\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport {\r\n    ActionTypes,\r\n    DeterminePendingTaskOfApplication,\r\n    SetActiveTask\r\n} from '../actions/workflows.action';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { determinePendingTask } from '../../core/utilities/application-request.utility';\r\n\r\n@Injectable()\r\nexport class TasksEffects {\r\n\r\n    @Effect() setPendingTask = this.actions$.pipe(\r\n        ofType(ActionTypes.DETERMINE_PENDING_TASK_OF_APPLICATION_REQUEST),\r\n        switchMap(\r\n            (action: DeterminePendingTaskOfApplication) => \r\n                determinePendingTask(action.payload)\r\n                    .pipe(\r\n                        map(\r\n                            (data) => {\r\n                                return new SetActiveTask(data);\r\n                            })\r\n                    )\r\n            ));\r\n\r\n    constructor(\r\n        private actions$: Actions\r\n    ) { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserInfoService } from '../../core/services/user-info.service';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { GetUserSuccess, GetUserFailure, ActionTypes, GetUserContactPersonSuccess, GetUserContactPersonFailure } from '../actions/user-info.actions';\r\nimport { switchMap, map, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { UserInfoModel } from '../../core/models/user-info.interface';\r\nimport { PersonalInfoModel } from '../../core/models/personal-info.interface';\r\n\r\n@Injectable()\r\nexport class UserInfoEffectsService {\r\n\r\n    @Effect() getUserInfoEffect = this.actions$.pipe(\r\n        ofType(ActionTypes.GET_USER),\r\n        switchMap(\r\n            (action) => this.userInfoService.getUserInfo()\r\n                .pipe(\r\n                    map(\r\n                        (userInfo) => {\r\n                            return new GetUserSuccess(new UserInfoModel(userInfo));\r\n                        }\r\n                    ),\r\n                    catchError(\r\n                        (err) => of(new GetUserFailure(err))\r\n                    )\r\n                )\r\n        ))\r\n    @Effect() getUserContactPersonEffect = this.actions$.pipe(\r\n        ofType(ActionTypes.GET_USER_CONTACT_PERSON),\r\n        switchMap(\r\n            (action) => this.userInfoService.getUserContactPerson()\r\n                .pipe(\r\n                    map(\r\n                        (contactPerson) => {\r\n                            return new GetUserContactPersonSuccess(contactPerson);\r\n                        }\r\n                    ),\r\n                    catchError(\r\n                        (err) => of(new GetUserContactPersonFailure(err))\r\n                    )\r\n                )\r\n        ))\r\n\r\n    constructor(\r\n        private userInfoService: UserInfoService,\r\n        private actions$: Actions\r\n    ) { }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApplicationRequestService } from '../../core/services/application-request.service';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport {\r\n    ActionTypes,\r\n    GetApplicationWorkflows,\r\n    GetApplicationWorkflowsFailure,\r\n    GetApplicationWorkflowsSuccess,\r\n} from '../actions/workflows.action';\r\nimport { switchMap, map, catchError, filter } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport * as fromRouterActions from '../actions/router.actions';\r\n\r\n@Injectable()\r\nexport class ApplicationWorkflowsEffects {\r\n    @Effect() loadApplicationRequestWorkflowsEffect = this.actions$.pipe(\r\n        ofType(fromRouterActions.ActionTypes.ROUTE_CHANGE),\r\n        filter((routeChangeAction: fromRouterActions.RouteChange) =>\r\n            routeChangeAction.payload.path === 'applications/:applicationId'),\r\n        map((action) => {\r\n            const { applicationId } = action.payload.params;\r\n            return new GetApplicationWorkflows(applicationId);\r\n        })\r\n    );\r\n    @Effect() getApplicationRequestWorkflowsEffect = this.actions$.pipe(\r\n        ofType(ActionTypes.GET_APPLICATION_REQUEST_WORKFLOWS),\r\n        switchMap(\r\n            (action: GetApplicationWorkflows) =>\r\n                this.applicationRequestService.getApplicationRequestWorkflows(action.payload)\r\n                    .pipe(\r\n                        map(\r\n                            (workflows) => {\r\n                                return new GetApplicationWorkflowsSuccess(workflows)\r\n                            }\r\n                        ),\r\n                        catchError(\r\n                            (err) => of(new GetApplicationWorkflowsFailure(err))\r\n                        )\r\n                    )\r\n        ));\r\n\r\n    constructor(\r\n        private applicationRequestService: ApplicationRequestService,\r\n        private actions$: Actions\r\n    ) { }\r\n}\r\n","import * as fromRootActions from './actions';\r\nimport * as fromRootEffects from './effects';\r\nimport * as fromRootReducers from './reducers';\r\nimport * as fromRootSelectors from './selectors';\r\nexport {\r\n    fromRootActions,\r\n    fromRootEffects,\r\n    fromRootReducers,\r\n    fromRootSelectors,\r\n}","import * as workflowsReducer from './workflows.reducer';\r\nimport * as applicationReducer from './application.reducer';\r\nimport { ActionReducer } from 'ngx-bootstrap/mini-ngrx';\r\nimport { combineReducers } from '@ngrx/store';\r\n\r\nexport interface ApplicationRequestState {\r\n    application: applicationReducer.ApplicationState;\r\n    workflows: workflowsReducer.WorkflowsState;\r\n}\r\n\r\nexport const InitialState: ApplicationRequestState = {\r\n    application: applicationReducer.InitialState,\r\n    workflows: workflowsReducer.InitialState,\r\n}\r\n\r\nconst reducers = {\r\n    application: applicationReducer.applicationReducer,\r\n    workflows: workflowsReducer.reducer\r\n}\r\n\r\nexport const reducer : ActionReducer<ApplicationRequestState> = combineReducers(reducers);\r\n\r\nexport const getApplicaitonRequestState = (state: ApplicationRequestState) => state.application;\r\nexport const getApplicationWorkflowsState = (state: ApplicationRequestState) => state.workflows;\r\n\r\n//NEED TO DISCUSS: how to set selectors in state tree. Ideally at reducer we should have state selectors\r\n// but combining the reducer at top where will the selectors go?\r\nexport const getApplicationWorkflows = (state: ApplicationRequestState) => state.workflows.workflows;\r\nexport const getApplication = (state: ApplicationRequestState) => state.application.application;\r\nexport const getApplicationActiveTask = (state: ApplicationRequestState) => state.workflows.activeTask;","import { ApplicationActions, ActionTypes } from '../actions/application.actions';\r\n\r\nexport interface ApplicationState {\r\n    application: any;\r\n    loaded: boolean;\r\n    loading: boolean;\r\n}\r\n\r\nexport const InitialState: ApplicationState = {\r\n    application: {},\r\n    loaded: false,\r\n    loading: false\r\n}\r\n\r\nexport function applicationReducer(\r\n    state: ApplicationState = InitialState,\r\n    action: ApplicationActions\r\n): ApplicationState {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_APPLICATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ActionTypes.GET_APPLICATION_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                application: action.payload,\r\n                loaded: true,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getApplicaiton = (state: ApplicationState) => state.application;\r\nexport const getApplicationLoaded = (state: ApplicationState) => state.loaded;\r\nexport const getApplicationLoading = (state: ApplicationState) => state.loading;\r\n","import { ActionReducerMap } from '@ngrx/store';\r\n\r\nimport * as fromRouter from '@ngrx/router-store';\r\nimport { Params, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport * as userInfoReducer from './user-info.reducer';\r\nimport * as questionnaireReducer from './questionnaire.reducer';\r\nimport * as applicationRequestReducer from './application-request.reducer';\r\n\r\nexport interface RouteStateUrl {\r\n    url: string;\r\n    queryParams: Params;\r\n    params: Params;\r\n}\r\n\r\nexport interface AppState {\r\n    user: userInfoReducer.UserInfoState,\r\n    questionnaire: questionnaireReducer.QuestionnaireState,\r\n    routerReducer: fromRouter.RouterReducerState,\r\n    applicationRequest: applicationRequestReducer.ApplicationRequestState,\r\n}\r\n\r\nexport const rootReducers: ActionReducerMap<AppState> = {\r\n    user: userInfoReducer.reducer,\r\n    questionnaire: questionnaireReducer.reducer,\r\n    routerReducer: fromRouter.routerReducer,\r\n    applicationRequest: applicationRequestReducer.reducer\r\n};\r\n\r\nexport {\r\n    userInfoReducer,\r\n    questionnaireReducer,\r\n    applicationRequestReducer\r\n};\r\n\r\nexport class CustomSerializer\r\n    implements fromRouter.RouterStateSerializer<RouteStateUrl> {\r\n    serialize(routerState: RouterStateSnapshot): RouteStateUrl {\r\n        const { url } = routerState;\r\n        const { queryParams } = routerState.root;\r\n        let state: ActivatedRouteSnapshot = routerState.root;\r\n        while (state.firstChild) {\r\n            state = state.firstChild;\r\n        }\r\n        const { params } = state;\r\n        return { url, queryParams, params };\r\n    }\r\n}\r\n","import { ActionTypes, QuesitonnaireActions } from '../actions/questionnaire.actions';\r\nimport { Task, QuestionaireDeltaResponse, QuestionaireDeltaError, FormlyFieldConfigArrayCollection } from '../../core/models'\r\nimport { FormlyFieldConfig } from '@ngx-formly/core';\r\nexport interface QuestionnaireState {\r\n    readonly currentTask: Task,\r\n    readonly currentQuestionnaireConfig: FormlyFieldConfigArrayCollection[],\r\n    readonly currentQuestionnaireDelta: QuestionaireDeltaResponse,\r\n    readonly mergedCurrentTaskWithDelta: Task,\r\n    readonly currentQuestionId: string,\r\n    readonly errors: QuestionaireDeltaError[]\r\n}\r\n\r\nexport const InitialQuestionnaireState: QuestionnaireState = {\r\n    currentTask: null,\r\n    currentQuestionnaireConfig: null,\r\n    currentQuestionnaireDelta: null,\r\n    mergedCurrentTaskWithDelta: null,\r\n    currentQuestionId: null,\r\n    errors: []\r\n}\r\n\r\nexport function reducer(state: QuestionnaireState = InitialQuestionnaireState, action: QuesitonnaireActions) {\r\n    let errorList;\r\n\r\n    switch (action.type) {\r\n\r\n\r\n\r\n\r\n\r\n        case ActionTypes.MERGE_DELTA_FIELD_CHANGE_DELTA_AND_CURRENT_TASK_SUCCESS:\r\n            return {\r\n                ...state,\r\n                mergedCurrentTaskWithDelta: action.payload\r\n            }\r\n        /// Todo : handle error case wit error object\r\n        case ActionTypes.MERGE_DELTA_FIELD_CHANGE_DELTA_AND_CURRENT_TASK_FAIL:\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n\r\n        case ActionTypes.UPDATE_CURRENT_TASK:\r\n\r\n            return {\r\n                ...state,\r\n                currentTask: action.payload\r\n\r\n            }\r\n\r\n        case ActionTypes.SET_QUESTIONNAIRE_ERRORS:\r\n            if (action.payload) {\r\n                errorList = state.errors.concat(action.payload);\r\n\r\n                return {\r\n                    ...state,\r\n                    errors: errorList\r\n\r\n                }\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n\r\n        case ActionTypes.DELETE_QUESTIONNAIRE_ERRORS_BY_QUESTION_ID:\r\n\r\n            if (action.payload) {\r\n                errorList = state.errors.filter((error) => {\r\n                    return error.id != action.payload;\r\n                });\r\n\r\n                return {\r\n                    ...state,\r\n                    errors: errorList\r\n\r\n                }\r\n            } else {\r\n                return state;\r\n            }\r\n\r\n        case ActionTypes.RESET_QUESTIONNAIRE_STATE_TO_INTIAL_STATE:\r\n\r\n            return InitialQuestionnaireState;\r\n\r\n        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n        case ActionTypes.GET_CURRENT_TASK_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentTask: action.payload\r\n            }\r\n\r\n        /////Todo: set up an error case in state module\r\n        case ActionTypes.GET_CURRENT_TASK_FAIL:\r\n            return {\r\n                ...state\r\n\r\n            }\r\n\r\n\r\n\r\n        case ActionTypes.GET_CURRENT_QUESTIONNAIRE_FORMLY_CONFIG_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentQuestionnaireConfig: action.payload\r\n            }\r\n        /// Todo : handle error case wit error object\r\n        case ActionTypes.GET_CURRENT_QUESTIONNAIRE_FORMLY_CONFIG_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case ActionTypes.GET_CURRENT_FIELD_CHANGE_DELTA_SUCCESS:\r\n            if (action.payload) {\r\n\r\n\r\n                return {\r\n                    ...state,\r\n                    currentTask: action.payload\r\n\r\n                }\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n        /// Todo : handle error case wit error object\r\n        case ActionTypes.GET_CURRENT_FIELD_CHANGE_DELTA_FAIL:\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case ActionTypes.SET_CURRENT_QUESTION_ID:\r\n            return {\r\n                ...state,\r\n                currentQuestionId:action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const getCurrentTask = (state: QuestionnaireState) => state.currentTask;\r\nexport const getCurrentQuestionnaireConfig = (state: QuestionnaireState) => state.currentQuestionnaireConfig;\r\nexport const getCurrentQuestionnaireDelta = (state: QuestionnaireState) => state.currentQuestionnaireDelta;\r\nexport const getMergedCurrentTaskWithDelta = (state: QuestionnaireState) => state.mergedCurrentTaskWithDelta;\r\nexport const getCurrentQuestionId = (state: QuestionnaireState) => state.currentQuestionId;\r\nexport const getCurrentQuestionnaireErrors = (state: QuestionnaireState) => state.errors;\r\n///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n","import { ActionTypes, UserActions } from '../actions/user-info.actions';\r\nimport { PersonalInfoInterface, PersonalInfoModel } from '../../core/models/personal-info.interface';\r\nimport { UserInfoInterface, UserInfoModel } from '../../core/models/user-info.interface';\r\n\r\n//TODO: we can discuss the naming convention\r\nexport interface UserInfoState {\r\n    personalInfo: PersonalInfoInterface,\r\n    role: string,\r\n    isLoggedIn: boolean,\r\n    isAuthenticated: boolean,\r\n    entitlements: Array<any>,\r\n    contactPerson: any\r\n}\r\n\r\nexport const InitialUserInfoState: UserInfoState = {\r\n    personalInfo: new PersonalInfoModel(null),\r\n    role: '',\r\n    isLoggedIn: false,\r\n    isAuthenticated: null,\r\n    entitlements: [],\r\n    contactPerson: null\r\n}\r\n\r\nexport function reducer(state: UserInfoState = InitialUserInfoState, action: UserActions) {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_USER_SUCCESS:\r\n            const { personalInfo, role, entitlements} = action.payload;\r\n            return {\r\n                ...state,\r\n                personalInfo,\r\n                entitlements,\r\n                role,\r\n                isLoggedIn: true,\r\n                isAuthenticated: true\r\n            };\r\n        case ActionTypes.GET_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            };\r\n        case ActionTypes.GET_USER_CONTACT_PERSON_SUCCESS:\r\n            return {\r\n                ...state,\r\n                contactPerson: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getUserPersonalInfo = (state: UserInfoState) => state.personalInfo;\r\nexport const getUserRole = (state: UserInfoState) => state.role;\r\nexport const getUserIsLoggedIn = (state: UserInfoState) => state.isLoggedIn;\r\nexport const getUserIsAuthenticated = (state: UserInfoState) => state.isAuthenticated;\r\nexport const getUserEntitlements = (state: UserInfoState) => state.entitlements;\r\nexport const getUserContactPerson = (state: UserInfoState) => state.contactPerson;\r\n","import { ActionTypes, WorkflowsActions } from '../actions/workflows.action';\r\n\r\nexport interface WorkflowsState {\r\n    workflows: any,\r\n    activeTask: {\r\n        workflowId: string,\r\n        task: {\r\n            label: string,\r\n            description: string,\r\n            id: string,\r\n            status: string,\r\n            type: string\r\n        }\r\n    },\r\n    previousTask: {\r\n        workflowId: string,\r\n        task: {\r\n            label: string,\r\n            description: string,\r\n            id: string,\r\n            status: string,\r\n            type: string\r\n        }\r\n    },\r\n    nextTask: {\r\n        workflowId: string,\r\n        task: {\r\n            label: string,\r\n            description: string,\r\n            id: string,\r\n            status: string,\r\n            type: string\r\n        }\r\n    },\r\n    loaded: boolean,\r\n    loading: boolean\r\n}\r\n//we can dispatch change task action and calculate all the task again.\r\n\r\nexport const InitialState: WorkflowsState = {\r\n    workflows: [],\r\n    activeTask: {\r\n        workflowId: '',\r\n        task: {\r\n            label: '',\r\n            description: '',\r\n            id: '',\r\n            status: '',\r\n            type: ''\r\n        }\r\n    },\r\n    previousTask: {\r\n        workflowId: '',\r\n        task: {\r\n            label: '',\r\n            description: '',\r\n            id: '',\r\n            status: '',\r\n            type: ''\r\n        }\r\n    },\r\n    nextTask: {\r\n        workflowId: '',\r\n        task: {\r\n            label: '',\r\n            description: '',\r\n            id: '',\r\n            status: '',\r\n            type: ''\r\n        }\r\n    },\r\n    loaded: false,\r\n    loading: false\r\n}\r\n\r\nexport function reducer(\r\n    state: WorkflowsState = InitialState,\r\n    action: WorkflowsActions\r\n): WorkflowsState {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_APPLICATION_REQUEST_WORKFLOWS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loaded: true,\r\n                loading: false,\r\n                workflows: action.payload\r\n            }\r\n        case ActionTypes.SET_ACTIVE_TASK:\r\n            const { workflowId, taskId } = action.payload;\r\n            //TODO: change this to key value pair\r\n            //determine routing as well with different actions\r\n            const workflow = state.workflows.find(e => e.id === workflowId);\r\n            const task = workflow && workflow.tasks.find(e => e.id === taskId);\r\n            return {\r\n                ...state,\r\n                activeTask: {\r\n                    workflowId,\r\n                    task\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getWorkflows = (state: WorkflowsState) => state.workflows;\r\nexport const getWorkflowsLoaded = (state: WorkflowsState) => state.loaded;\r\nexport const getWorkflowsLoading = (state: WorkflowsState) => state.loading;\r\nexport const getActiveWorkflowTask = (state: WorkflowsState) => state.activeTask.task;\r\nexport const getActiveWorkflowTaskId = (state: WorkflowsState) => state.activeTask.task.id;","import * as fromStore from '../reducers';\r\nimport * as fromApplicationRequest from '../reducers/application-request.reducer';\r\nimport { createSelector } from '@ngrx/store';\r\n\r\nexport const getApplicaitonRequestState = (state: fromStore.AppState) => state.applicationRequest;\r\n\r\nexport const getApplicaitonState = createSelector(\r\n    getApplicaitonRequestState,\r\n    fromApplicationRequest.getApplicaitonRequestState\r\n);\r\n\r\nexport const getApplicationWorkflowsState = createSelector(\r\n    getApplicaitonRequestState,\r\n    fromApplicationRequest.getApplicationWorkflowsState\r\n);\r\n\r\nexport const getApplicaiton = createSelector(\r\n    getApplicaitonRequestState,\r\n    fromApplicationRequest.getApplication\r\n);\r\n\r\nexport const getApplicationWorkflows = createSelector(\r\n    getApplicaitonRequestState,\r\n    fromApplicationRequest.getApplicationWorkflows\r\n);\r\n\r\nexport const getApplicationActiveTask = createSelector(\r\n    getApplicaitonRequestState,\r\n    fromApplicationRequest.getApplicationActiveTask\r\n);\r\n","import * as userSelectors from './user-info.selectors';\r\nimport * as questionnaireSelectors from './questionnaire.selectors';\r\nimport * as applicationRequestSelectors from './application-request.selectors';\r\nimport * as routerSelectors from './router.selectors';\r\nimport * as workflowsSelectors from './workflows.selectors';\r\n\r\nexport {\r\n    userSelectors,\r\n    questionnaireSelectors,\r\n    applicationRequestSelectors,\r\n    routerSelectors,\r\n    workflowsSelectors\r\n}","import * as fromRootReducer  from '../reducers'\r\nimport { createSelector } from '@ngrx/store';\r\n\r\nexport const getQuestionnaireState = (state: fromRootReducer.AppState) => state.questionnaire;\r\n\r\nexport const getCurrentTask = createSelector(\r\n    getQuestionnaireState,\r\n    fromRootReducer.questionnaireReducer.getCurrentTask\r\n\r\n)\r\n\r\nexport const getCurrentQuestionnaireConfig = createSelector(\r\n    getQuestionnaireState,\r\n    fromRootReducer.questionnaireReducer.getCurrentQuestionnaireConfig\r\n\r\n)\r\n\r\nexport const getCurrentQuestionnaireDelta = createSelector(\r\n    getQuestionnaireState,\r\n    fromRootReducer.questionnaireReducer.getCurrentQuestionnaireDelta\r\n\r\n)\r\nexport const getMergedCurrentTaskWithDelta = createSelector(\r\n    getQuestionnaireState,\r\n    fromRootReducer.questionnaireReducer.getMergedCurrentTaskWithDelta\r\n\r\n)\r\nexport const getCurrentQuestionId = createSelector(\r\n    getQuestionnaireState,\r\n    fromRootReducer.questionnaireReducer.getCurrentQuestionId\r\n\r\n)\r\n\r\nexport const getCurrentQuestionnaireErrors = createSelector(\r\n    getQuestionnaireState,\r\n    fromRootReducer.questionnaireReducer.getCurrentQuestionnaireErrors\r\n\r\n)\r\n\r\n","import * as fromStore from '../reducers';\r\nimport * as fromRouter from '@ngrx/router-store';\r\nimport { createFeatureSelector } from '@ngrx/store';\r\n\r\nexport const getRouterState = createFeatureSelector<\r\n    fromRouter.RouterReducerState<fromStore.RouteStateUrl>\r\n>('routerReducer')","import * as fromStore from '../reducers';\r\nimport * as fromUser from '../reducers/user-info.reducer';\r\nimport { createSelector } from '@ngrx/store';\r\n\r\nexport const getUserState = (state: fromStore.AppState) => state.user;\r\nexport const getUserPersonalInfo = createSelector(\r\n    getUserState,\r\n    fromUser.getUserPersonalInfo\r\n);\r\nexport const getUserRole = createSelector(\r\n    getUserState,\r\n    fromUser.getUserRole\r\n);\r\nexport const getUserIsLoggedIn = createSelector(\r\n    getUserState,\r\n    fromUser.getUserIsLoggedIn\r\n);\r\nexport const getUserIsAuthenticated = createSelector(\r\n    getUserState,\r\n    fromUser.getUserIsAuthenticated\r\n);\r\nexport const getUserEntitlements = createSelector(\r\n    getUserState,\r\n    fromUser.getUserEntitlements\r\n);\r\nexport const getUserContactPerson = createSelector(\r\n    getUserState,\r\n    fromUser.getUserContactPerson\r\n);\r\n","import * as fromStore from '../reducers';\r\nimport * as fromWorkflows from '../reducers/workflows.reducer';\r\nimport { createSelector } from '@ngrx/store';\r\n\r\nexport const getWorkflowsState =\r\n    (state: fromStore.AppState) => state.applicationRequest.workflows;\r\n\r\nexport const getWorkflows = createSelector(\r\n    getWorkflowsState,\r\n    fromWorkflows.getWorkflows\r\n);\r\n\r\nexport const getActiveWorkflowTask = createSelector(\r\n    getWorkflowsState,\r\n    fromWorkflows.getActiveWorkflowTask\r\n);\r\n\r\nexport const getActiveWorkflowTaskId = createSelector(\r\n    getWorkflowsState,\r\n    fromWorkflows.getActiveWorkflowTaskId\r\n);\r\n\r\nexport const getWorkflowsLoaded = createSelector(\r\n    getWorkflowsState,\r\n    fromWorkflows.getWorkflowsLoaded\r\n);\r\n\r\nexport const getWorkflowsLoading = createSelector(\r\n    getWorkflowsState,\r\n    fromWorkflows.getWorkflowsLoading\r\n);\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <h4>Formly Address fields :</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-8 mt-3\\\">\\r\\n        <form class=\\\"formly-consumer\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n          <formly-form [model]=\\\"model\\\" [fields]=\\\"fields\\\" [options]=\\\"options\\\" [form]=\\\"form\\\">\\r\\n          </formly-form>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        {{model | json}}\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormlyFormOptions } from '@ngx-formly/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { takeUntil, startWith, tap } from 'rxjs/operators';\r\nimport { Subject, Observable, of } from 'rxjs';\r\nimport { DynamicOptionsService } from '../../core/services/dynamic-options.service';\r\n\r\n@Component({\r\n  selector: 'formly-address-consumer',\r\n  templateUrl: './formly-address-consumer.component.html',\r\n  styleUrls: ['./formly-address-consumer.component.scss']\r\n})\r\n\r\nexport class FormlyAddressConsumerComponent implements OnInit {\r\n  onDestroy$ = new Subject<void>();\r\n  form = new FormGroup({});\r\n  model: any = {\r\n    addresses: [{}]//this is mandatory\r\n  };\r\n  options: FormlyFormOptions = {};\r\n  fields: Array<any>;\r\n  stateData: any;\r\n  getStateData(country): Observable<any[]> {\r\n    switch (country) {\r\n      case 'India': return of([\r\n        {\r\n          value: 'Maharashtra',\r\n          label: 'Maharashtra'\r\n        },\r\n        {\r\n          value: 'Delhi',\r\n          label: 'Delhi'\r\n        },\r\n        {\r\n          value: 'Uttar Pradesh',\r\n          label: 'Uttar Pradesh'\r\n        }\r\n      ]);\r\n      case 'United States of America': return of([\r\n        {\r\n          value: 'Utah',\r\n          label: 'Utah'\r\n        },\r\n        {\r\n          value: 'Texas',\r\n          label: 'Texas'\r\n        }\r\n      ]);\r\n    }\r\n  }\r\n  getCountryData(): Observable<any[]> {\r\n    return this.dynamicOptionsService.getDynamicOptions('allCountry');\r\n  }\r\n  \r\n  constructor(private dynamicOptionsService: DynamicOptionsService) { }\r\n\r\n  ngOnInit() {\r\n    this.fields = [\r\n      {\r\n        key: 'addresses',\r\n        type: 'custom-address-fields',\r\n        fieldArray: {\r\n          fieldGroupClassName: 'row',\r\n          fieldGroup: [\r\n            {\r\n              key: 'addressDescription',\r\n              className: 'col-sm-12 mt-2',\r\n              type: 'custom-dropdown',\r\n              templateOptions: {\r\n                required: true,\r\n                label: 'Address Description',\r\n                options: [//TODO: what are all the values and the structure of options\r\n                  {\r\n                    label: 'Home Address',\r\n                    value: 'homeAddress'\r\n                  },\r\n                  {\r\n                    label: 'Legal Address',\r\n                    value: 'legalAddress'\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            {\r\n              key: 'legalAndHomeAddressSame',\r\n              type: 'custom-radio-button',\r\n              className: 'col-sm-12 mt-2',\r\n              templateOptions: {\r\n                required: true,\r\n                label: \"Is your home/legal address the same as the primary account holder's address?\",\r\n                options: [\r\n                  {\r\n                    label: 'Yes',\r\n                    value: true\r\n                  },\r\n                  {\r\n                    label: 'No',\r\n                    value: false\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            {\r\n              key: 'address1',\r\n              type: 'custom-textbox',\r\n              className: 'col-sm-12 mt-2',\r\n              templateOptions: {\r\n                required: true,\r\n                label: 'Address 1',\r\n              }\r\n            },\r\n            {\r\n              key: 'address2',\r\n              type: 'custom-textbox',\r\n              className: 'col-sm-12 mt-2',\r\n              templateOptions: {\r\n                required: true,\r\n                label: 'Address 2',\r\n              }\r\n            },\r\n            {\r\n              key: 'city',\r\n              type: 'custom-textbox',\r\n              className: 'col-sm-6 mt-2',\r\n              templateOptions: {\r\n                required: true,\r\n                label: 'City',\r\n              }\r\n            },\r\n            {\r\n              key: 'postalCode',\r\n              type: 'custom-textbox',\r\n              className: 'col-sm-6 mt-2',\r\n              templateOptions: {\r\n                required: true,\r\n                label: 'Postal Zip',\r\n              }\r\n            },\r\n            {\r\n              key: 'state',\r\n              type: 'custom-dropdown',\r\n              className: 'col-sm-6 mt-2',\r\n              templateOptions: {\r\n                label: 'State',\r\n                required: true,\r\n                hideRequiredMarker: true,\r\n                options: []\r\n              },\r\n              lifecycle: {\r\n                onInit: (form, field) => {\r\n                  form.get('country').valueChanges.pipe(\r\n                    takeUntil(this.onDestroy$),\r\n                    startWith(form.get('country').value),\r\n                    tap(country => {\r\n                      field.formControl.setValue('');\r\n                      if(country) {\r\n                        field.templateOptions.options = this.getStateData(country);\r\n                      }\r\n                    }),\r\n                  ).subscribe();\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'country',\r\n              type: 'custom-dropdown',\r\n              className: 'col-sm-6 mt-2',\r\n              templateOptions: {\r\n                required: true,\r\n                label: 'Country',\r\n                options: this.getCountryData(),\r\n                hideRequiredMarker: true\r\n              }\r\n            },\r\n            {\r\n              key: 'addressSince',\r\n              type: 'custom-datepicker',\r\n              className: 'col-sm-12 mt-2',\r\n              templateOptions: {\r\n                label: 'Address Since',\r\n                required: true\r\n              }\r\n            },\r\n            {\r\n              key: 'mailingAddress',\r\n              type: 'custom-radio-button',\r\n              className: 'col-sm-12 mt-2',\r\n              templateOptions: {\r\n                required: true,\r\n                label: \"Would you like to use this address as your mailing address?\",\r\n                options: [\r\n                  {\r\n                    label: 'Yes',\r\n                    value: true\r\n                  },\r\n                  {\r\n                    label: 'No',\r\n                    value: false\r\n                  }\r\n                ]\r\n              }\r\n            }],\r\n          templateOptions: {\r\n            btnText: '+ Add a new address',\r\n            heading: 'Addresses'\r\n          },\r\n          recurrent: true\r\n        }\r\n      }\r\n    ];\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\"> \\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4>Formly custom fields :</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6 mt-3\\\">\\r\\n        <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n            <formly-form [model]=\\\"model\\\" [fields]=\\\"fields\\\" [options]=\\\"options\\\" [form]=\\\"form\\\">\\r\\n            </formly-form>\\r\\n      </form> \\r\\n     \\r\\n    </div>\\r\\n   \\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".formly-consumer .form-group {\\n  margin-bottom: 10px;\\n  margin-top: 10px; }\\n\\n.formly-consumer .custom-checkbox {\\n  margin-bottom: 10px;\\n  margin-top: 10px; }\\n\\n.ng-select-dropdown-outer.bottom {\\n  top: 100%;\\n  border-bottom-right-radius: 4px;\\n  border-bottom-left-radius: 4px;\\n  border-top-color: #e6e6e6;\\n  margin-top: 2px;\\n  border: 1px solid #bbbbbb;\\n  right: -2px; }\\n\\n.ng-select-dropdown-outer .ng-select-dropdown .ng-option.marked {\\n  background-color: #ebf5ff;\\n  color: #333; }\\n\\n.ng-select .ng-arrow-zone .ng-arrow {\\n  border-color: #999 transparent transparent;\\n  border-style: solid;\\n  border-width: 5px 5px 2.5px; }\\n\\n.ng-select.opened > .ng-control .ng-arrow {\\n  top: -2px;\\n  border-color: transparent transparent #999;\\n  border-width: 0 5px 5px; }\\n\\n.ng-select .ng-arrow-zone .ng-arrow {\\n  display: inline-block;\\n  height: 0;\\n  width: 0;\\n  position: relative; }\\n\\n.custom-control-label::before {\\n  left: -22px; }\\n\\n.PaddingLeftZero {\\n  padding-left: 0px; }\\n\\n.PaddingRightZero {\\n  padding-right: 0px; }\\n\\n.nogutter {\\n  margin-right: 0px;\\n  padding-right: 0px; }\\n\\n.ng-select-dropdown-outer.bottom {\\n  background-color: #fff;\\n  right: 0px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ViewEncapsulation } from '@angular/core';\r\n\r\nimport { of as observableOf } from 'rxjs/observable/of';\r\n// import { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/debounce';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { UploadFileComponent } from '../../custom-formly-fields/components/upload-file/upload-file.component';\r\n\r\n\r\n// import { debounce } from 'rxjs/internal/operators/debounce';\r\n\r\n@Component({\r\n  selector: 'formly-consumer',\r\n  templateUrl: './formly-consumer.component.html',\r\n  styleUrls: ['./formly-consumer.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class FormlyConsumerComponent implements OnInit {\r\n  form = new FormGroup({});\r\n  model: any = {\r\n    'Phone': [{}]\r\n  };\r\n  options: FormlyFormOptions = {};\r\n  fields: Array<any>;\r\n  listData: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.listData = [\r\n    { label: 'New York', value: 'new-york' },\r\n    { label: 'Illinois', value: 'illinois' },\r\n    { label: 'California', value: 'california' },\r\n    { label: 'Michigan', value: 'michigan' },\r\n    { label: 'Ohio', value: 'ohio' }];\r\n    this.fields = [\r\n      {\r\n        key: 'Phone',\r\n        type: 'custom-phone',\r\n        fieldArray: {\r\n          fieldGroupClassName: 'row',\r\n          templateOptions: {\r\n            btnText: '+ add new phone information',\r\n          },\r\n          fieldGroup: [\r\n            {\r\n              className: 'col-sm-12',\r\n              type: 'custom-textbox',\r\n              key: 'description',\r\n              templateOptions: {\r\n                label: 'Phone Description',\r\n                required: true,\r\n              },\r\n            },\r\n            {\r\n              type: 'custom-textbox',\r\n              key: 'countryCode',\r\n              className: 'col-sm-6',\r\n              templateOptions: {\r\n                label: 'Country Code',\r\n              },\r\n            },\r\n            {\r\n              type: 'custom-textbox',\r\n              key: 'homePhone',\r\n              className: 'col-sm-6',\r\n              templateOptions: {\r\n                label: 'Home Phone Number',\r\n              }\r\n            },\r\n            {\r\n              type: 'custom-checkbox',\r\n              key: 'setAsPrimary',\r\n              className: 'col-sm-12',\r\n              templateOptions: {\r\n                label: 'Use this number as primary contact',\r\n              },\r\n            },\r\n            {\r\n              type: 'custom-checkbox',\r\n              key: 'setForBanking',\r\n              className: 'col-sm-12',\r\n              templateOptions: {\r\n                label: 'Use this number for approving banking activity',\r\n              },\r\n            }\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        key: 'text',\r\n        type: 'custom-textbox',\r\n        templateOptions: {\r\n          label: 'Require text',\r\n          placeholder: 'Formly is terrific!',\r\n          required: true\r\n        }\r\n      },\r\n      {\r\n        key: 'text',\r\n        type: 'custom-textbox',\r\n        templateOptions: {\r\n          label: 'Optional text',\r\n          placeholder: 'Formly is terrific!'\r\n        }\r\n      },\r\n      {\r\n        key: 'text',\r\n        type: 'custom-textbox',\r\n        templateOptions: {\r\n          label: 'Optional Text + tooltip',\r\n          placeholder: 'Formly is terrific!',\r\n          tooltip: {\r\n            content: 'Hey this is tooltip',\r\n            placement: 'right'\r\n          }\r\n        }\r\n      },\r\n      {\r\n        key: 'text',\r\n        type: 'custom-textbox',\r\n        templateOptions: {\r\n          label: 'Optional text',\r\n          placeholder: 'Formly is terrific!'\r\n        }\r\n      },\r\n      {\r\n        key: 'text',\r\n        type: 'custom-textbox',\r\n        templateOptions: {\r\n          label: 'Optional Text + tooltip',\r\n          placeholder: 'Formly is terrific!',\r\n          tooltip: {\r\n            content: 'Hey this is tooltip',\r\n            placement: 'right'\r\n          }\r\n        }\r\n      },\r\n      {\r\n        key: 'requiredCheckBox',\r\n        type: 'custom-checkbox',\r\n        templateOptions: {\r\n          label: 'Hey there you need to check this box as this is required',\r\n          required: true,\r\n        }\r\n      },\r\n      {\r\n        key: 'requiredWithNoMarker',\r\n        type: 'custom-checkbox',\r\n        templateOptions: {\r\n          label: 'Hey there you need to check this box as this is required but i have no required marker ',\r\n          required: true,\r\n          hideRequiredMarker: true,\r\n        }\r\n      },\r\n      {\r\n        key: 'OptionalCheckbox',\r\n        type: 'custom-checkbox',\r\n        templateOptions: {\r\n          label: 'Hey there i am an optional checkbox. But please do not ignore me. ',\r\n          hideRequiredMarker: true,\r\n        }\r\n      },\r\n      {\r\n        key: 'checkboxWithHelpText',\r\n        type: 'custom-checkbox',\r\n        templateOptions: {\r\n          label: 'I am a checkbox with little help text ',\r\n          required: true,\r\n          hideRequiredMarker: true,\r\n          tooltip: {\r\n            content: 'Hey this is tooltip',\r\n            placement: 'right'\r\n          }\r\n        }\r\n      },\r\n      {\r\n        key: 'marvel1',\r\n        type: 'custom-dropdown',\r\n        templateOptions: {\r\n          label: 'Normal Select',\r\n          options: [\r\n            { label: 'Iron Man', value: 'iron_man' },\r\n            { label: 'Captain America', value: 'captain_america' },\r\n            { label: 'Black Widow', value: 'black_widow' },\r\n            { label: 'Hulk', value: 'hulk' },\r\n            { label: 'Captain Marvel', value: 'captain_marvel' }\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        key: 'radioButtonText',\r\n        type: 'custom-radio-button',\r\n        templateOptions: {\r\n          label: 'Do you have a U.S. Social Security Number?',\r\n          options: [\r\n            { label: 'Yes', value: 'Yes', id: 0 },\r\n            { label: 'No', value: 'No', id: 1 }\r\n          ],\r\n          valueProp: 'value',\r\n          labelProp: 'label'\r\n        },\r\n      },\r\n      {\r\n        key: 'dateOfBirth',\r\n        type: 'custom-datepicker',\r\n        templateOptions: {\r\n          label: 'Date of Birth',\r\n        }\r\n      },\r\n      {\r\n        key: 'state',\r\n        type: 'typeahead',\r\n        templateOptions: {\r\n          placeholder: 'Search for a state:',\r\n          label: 'Search for a state:',\r\n          search$: (term) => {\r\n            console.log('inner search', term);\r\n            if ((!term || term === '')) {\r\n              return observableOf(this.listData);\r\n            }\r\n            return observableOf(\r\n              this.listData.filter(\r\n                (v) =>  {\r\n                  console.log(v, ':::VData');\r\n                 return v.value.toLowerCase().indexOf(term.toLowerCase()) > -1;     \r\n                }\r\n              ).slice(0, 10))\r\n          },\r\n        }\r\n      },\r\n      {\r\n        key: 'data',\r\n        type: 'repeatAddressData',\r\n        fieldArray: {\r\n          fieldGroupClassName: 'row col-12 nogutter',\r\n          templateOptions: {\r\n            btnText: 'Add a new address proof',\r\n            tooltip: {\r\n              content: 'Hey this is tooltip',\r\n              placement: 'right'\r\n            }\r\n          },\r\n          fieldGroup: [\r\n            {\r\n              key: 'IdDropdown',\r\n              type: 'custom-dropdown',\r\n              className: 'col-sm-4 PaddingLeftZero',\r\n              templateOptions: {\r\n                label: 'ID Country',\r\n                options: [\r\n                  { label: 'Iron Man', value: 'iron_man' },\r\n                  { label: 'Captain America', value: 'captain_america' },\r\n                  { label: 'Black Widow', value: 'black_widow' },\r\n                  { label: 'Hulk', value: 'hulk' },\r\n                  { label: 'Captain Marvel', value: 'captain_marvel' }\r\n                ]\r\n              }\r\n            },\r\n            {\r\n              className: 'col-sm-4',\r\n              type: 'custom-textbox',\r\n              key: 'idNum',\r\n              templateOptions: {\r\n                label: 'ID Number',\r\n                required: true,\r\n              },\r\n            },\r\n            {\r\n              key: 'dateOfBirth',\r\n              type: 'custom-datepicker',\r\n              className: 'col-sm-4 PaddingRightZero',\r\n              templateOptions: {\r\n                label: 'Date of Birth',\r\n              }\r\n            },\r\n          ],\r\n        },\r\n    }\r\n  ];\r\n\r\n}\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4>Formly Address fields :</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8 mt-3\\\">\\r\\n      <form class=\\\"formly-consumer\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n        <formly-form [model]=\\\"model\\\" [fields]=\\\"fields\\\" [options]=\\\"options\\\" [form]=\\\"form\\\">\\r\\n        </formly-form>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { of, Observable } from 'rxjs';\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'formly-phone-consumer',\r\n  templateUrl: './formly-phone-consumer.component.html',\r\n  styleUrls: ['./formly-phone-consumer.component.css']\r\n})\r\nexport class FormlyPhoneConsumerComponent implements OnInit {\r\n  form = new FormGroup({});\r\n  model: any = {\r\n    phone: [{}]\r\n  };\r\n  options: FormlyFormOptions = {};\r\n  fields: Array<any>;\r\n  stateData: any;\r\n  constructor(\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fields = [\r\n      {\r\n        key: 'phone',\r\n        type: 'custom-phone',\r\n        fieldArray: {\r\n          fieldGroupClassName: 'row',\r\n          fieldGroup: [\r\n            {\r\n              className: 'col-sm-12',\r\n              type: 'custom-dropdown',\r\n              key: 'description',\r\n              templateOptions: {\r\n                label: 'Phone Description',\r\n                required: true,\r\n                options: [\r\n                  { label: 'Home', value: 'home' },\r\n                  { label: 'Work', value: 'work' },\r\n                  { label: 'Phone', value: 'phone' }\r\n                ]\r\n              },\r\n            },\r\n            {\r\n              type: 'custom-dropdown',\r\n              key: 'countryCode',\r\n              className: 'col-sm-6',\r\n              templateOptions: {\r\n                label: 'Country Code',\r\n                options: this.getCountryCode()\r\n              },\r\n            },\r\n            {\r\n              type: 'custom-textbox',\r\n              key: 'homePhone',\r\n              className: 'col-sm-6',\r\n              templateOptions: {\r\n                label: 'Home Phone Number',\r\n              }\r\n            },\r\n            {\r\n              type: 'custom-checkbox',\r\n              key: 'setAsPrimary',\r\n              className: 'col-sm-12',\r\n              templateOptions: {\r\n                label: 'Use this number as primary contact',\r\n              },\r\n            },\r\n            {\r\n              type: 'custom-checkbox',\r\n              key: 'setForBanking',\r\n              className: 'col-sm-12',\r\n              templateOptions: {\r\n                label: 'Use this number for approving banking activity',\r\n              },\r\n            }\r\n          ],\r\n          templateOptions: {\r\n            btnText: '+ Add a new address'\r\n          },\r\n          recurrent: true\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  getCountryCode(): Observable<any> {\r\n    return of([\r\n      {\r\n        label: '+91',\r\n        value: '+91'\r\n      },\r\n      {\r\n        label: '+1',\r\n        value: '+1'\r\n      },\r\n      {\r\n        label: '+111',\r\n        value: '+111'\r\n      },\r\n      {\r\n        label: '+123',\r\n        value: '+123'\r\n      },\r\n      {\r\n        label: '+133',\r\n        value: '+133'\r\n      },\r\n      {\r\n        label: '+144',\r\n        value: '+144'\r\n      },\r\n      {\r\n        label: '+155',\r\n        value: '+155'\r\n      },\r\n    ]);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4>Application Grid :</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <grid [data]='gridData'></grid>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".grid-label {\\n  display: block; }\\n\\n.grid-value {\\n  font-size: smaller; }\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ApiService } from '../../core';\r\nimport { ApplicationGridModel } from '../../core/models/application-grid.model';\r\nimport { fromRootReducers, fromRootSelectors } from '../../store';\r\nimport { Store } from '@ngrx/store';\r\n// import { GetApplications } from '../../store/actions/applications.actions';\r\n\r\n@Component({\r\n  selector: 'grid-consumer',\r\n  templateUrl: './grid-consumer.component.html',\r\n  styleUrls: ['./grid-consumer.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GridConsumerComponent implements OnInit {\r\n  gridData: any[];\r\n  data: any;\r\n\r\n  constructor(public apiService: ApiService, private store: Store<fromRootReducers.AppState>) { }\r\n\r\n  ngOnInit() {\r\n    // this.store.dispatch(new GetApplications());\r\n    // this.store.select(fromRootSelectors.applicationsSelectors.getApplicaitons)\r\n    //   .subscribe((applications: any) => {\r\n    //     this.gridData = [];\r\n    //     this.data = applications.map((details) => new ApplicationGridModel(details));\r\n    //     for (let i = 0; i < this.data.length; i++) {\r\n    //       let x = Object.entries(this.data[i]).map((e) => {\r\n    //         const obj = {};\r\n    //         obj[`${e[0]}`] = e[1];\r\n    //         return obj;\r\n    //       });\r\n    //       this.gridData.push(x);\r\n    //     }\r\n    //   });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4>Label value group:</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <label-value-group [config]='labelValueConfig'></label-value-group>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p class=\\\"divider mt-2\\\"></p>\\r\\n  <div class=\\\"row mt-3\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4>Label value group with badge:</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <label-value-group [config]='labelValueConfigWithBadge'></label-value-group>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p class=\\\"divider mt-2\\\"></p>\\r\\n  <div class=\\\"row mt-3\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4>Label with icon:</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <label-value-group [config]='labelValueConfigWithIcon'></label-value-group>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p class=\\\"divider mt-2\\\"></p>\\r\\n\\r\\n  <div class=\\\"row mt-3\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4>Label value group for form values:</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <label-value-group [config]='labelValueConfigForFormValues'></label-value-group>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p class=\\\"divider mt-2\\\"></p>\\r\\n  <div class=\\\"row mt-3\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4>Label value group with icon:</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <label-value-group [config]='labelValueWithIcon'></label-value-group>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p class=\\\"divider mt-2\\\"></p>\\r\\n  <div class=\\\"row mt-3\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4>Kebab with Dropdown</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"btn-group\\\" dropdown>\\r\\n        <a id=\\\"button-config\\\" dropdownToggle class=\\\"kebab-link\\\" aria-controls=\\\"dropdown-config\\\">\\r\\n          <i class=\\\"fa fa-ellipsis-v\\\"></i>\\r\\n        </a>\\r\\n        <ul id=\\\"dropdown-config\\\" *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\" aria-labelledby=\\\"button-config\\\">\\r\\n          <li role=\\\"menuitem\\\">\\r\\n            Action\\r\\n          </li>\\r\\n          <li role=\\\"menuitem\\\">\\r\\n            Another action\\r\\n          </li>\\r\\n          <li role=\\\"menuitem\\\">\\r\\n            Something else here\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<grid></grid>\"","module.exports = \".label-with-badge {\\n  display: block; }\\n\\n.icon-align-middle {\\n  position: relative;\\n  top: 10px; }\\n\\n.kebab-link i {\\n  font-size: 1.5rem; }\\n\\n.kebab-link i:active, .kebab-link i:hover {\\n  color: #4285F4; }\\n\\n.kebab-dropdown {\\n  position: absolute; }\\n\\n/* Material design for dropdowns */\\n\\n.dropdown-sm > .dropdown-menu > .dropdown-item {\\n  padding: 5px;\\n  margin-left: 0; }\\n\\n.dropdown-menu > .dropdown-item {\\n  padding: 1rem;\\n  margin-left: 0; }\\n\\n.dropdown-menu > .dropdown-item:hover {\\n  box-shadow: 0 8px 17px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n  color: white;\\n  background: #4285F4; }\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { BsDropdownConfig } from 'ngx-bootstrap/dropdown';\r\n@Component({\r\n  selector: 'label-value-consumer',\r\n  templateUrl: './label-value-consumer.component.html',\r\n  styleUrls: ['./label-value-consumer.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [{ provide: BsDropdownConfig, useValue: { autoClose: false } }]\r\n})\r\nexport class LabelValueConsumerComponent implements OnInit {\r\n  labelValueConfig: { label: string; value: string; labelClass: string; };\r\n  labelValueConfigWithBadge: any;\r\n  labelValueConfigWithIcon: any;\r\n  labelValueConfigForFormValues: { label: string; value: string; labelClass: string; labelContainerClass: string; };\r\n  labelValueWithIcon: any;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.labelValueConfig = {\r\n      label: 'Account Details',\r\n      value: 'Please fill required information for account details',\r\n      labelClass: 'bold'\r\n    };\r\n    this.labelValueConfigWithBadge = {\r\n      label: 'Account Details',\r\n      value: 'Please fill required information for account details',\r\n      labelClass: 'bold',\r\n      labelContainerClass: 'label-with-badge',\r\n      badgeTitle: 'New',\r\n      badgeClass: 'badge-dark'\r\n    };\r\n    this.labelValueConfigWithIcon = {\r\n      label: 'Action Required',\r\n      iconClass: 'fa-exclamation-circle warning',\r\n      labelClass: 'bold'\r\n    };\r\n    this.labelValueConfigForFormValues = {\r\n      label: 'Account Details',\r\n      value: 'Please fill required information for account details',\r\n      labelClass: 'bold',\r\n      labelContainerClass: 'label-with-badge',\r\n    };\r\n    this.labelValueWithIcon = {\r\n      label: 'Action Required',\r\n      iconClass: 'fa-check icon-align-middle',\r\n      labelClass: 'bold pl-2',\r\n      labelContainerClass: 'label-with-badge',\r\n      value: 'Please fill required information',\r\n      valueClass: 'pl-4'\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LabelValueConsumerComponent } from './label-value-consumer/label-value-consumer.component';\r\nimport { StorybookComponent } from './storybook/storybook.component';\r\nimport { TileConsumerComponent } from './tile-consumer/tile-consumer.component';\r\nimport { GridConsumerComponent } from './grid-consumer/grid-consumer.component';\r\nimport { FormlyConsumerComponent } from './formly-consumer/formly-consumer.component';\r\nimport { FormlyAddressConsumerComponent } from './formly-address-consumer/formly-address-consumer.component';\r\nimport { FormlyPhoneConsumerComponent } from './formly-phone-consumer/formly-phone-consumer.component';\r\n\r\nconst storybookRoutes: Routes = [\r\n    {\r\n        path: 'labelgroup',\r\n        component: LabelValueConsumerComponent\r\n    },\r\n    {\r\n        path: 'tile',\r\n        component: TileConsumerComponent\r\n    },\r\n    {\r\n        path: 'grid',\r\n        component: GridConsumerComponent\r\n    },\r\n    {\r\n        path: 'formly',\r\n        component: FormlyConsumerComponent\r\n    },\r\n    {\r\n        path: 'formly-address',\r\n        component: FormlyAddressConsumerComponent\r\n    },\r\n    {\r\n        path: 'formly-phone',\r\n        component: FormlyPhoneConsumerComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(storybookRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class StorybookRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormlyModule } from '@ngx-formly/core';\r\nimport { NgxUploaderModule } from 'ngx-uploader';\r\n\r\nimport { StorybookRoutingModule } from './storybook-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { CustomFormlyFieldsModule } from '../custom-formly-fields/custom-formly-fields.module';\r\n\r\nimport { LabelValueConsumerComponent } from './label-value-consumer/label-value-consumer.component';\r\nimport { StorybookComponent } from './storybook/storybook.component';\r\nimport { TileConsumerComponent } from './tile-consumer/tile-consumer.component';\r\nimport { BsDropdownModule } from 'ngx-bootstrap';\r\nimport { GridConsumerComponent } from './grid-consumer/grid-consumer.component';\r\nimport { FormlyConsumerComponent } from './formly-consumer/formly-consumer.component';\r\nimport { FormlyAddressConsumerComponent } from './formly-address-consumer/formly-address-consumer.component';\r\nimport { FormlyPhoneConsumerComponent } from './formly-phone-consumer/formly-phone-consumer.component';\r\nimport { CoreModule } from '../core';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    StorybookRoutingModule,\r\n    SharedModule,\r\n    CustomFormlyFieldsModule,\r\n    FormlyModule.forRoot({\r\n      types: [{ name: 'repeat', component: FormlyConsumerComponent }]\r\n    }),\r\n    BsDropdownModule.forRoot(),\r\n    NgxUploaderModule\r\n  ],\r\n  exports: [\r\n    NgxUploaderModule\r\n  ],\r\n  declarations: [\r\n    LabelValueConsumerComponent,\r\n    StorybookComponent,\r\n    TileConsumerComponent,\r\n    GridConsumerComponent,\r\n    FormlyConsumerComponent,\r\n    FormlyAddressConsumerComponent,\r\n    FormlyPhoneConsumerComponent\r\n  ]\r\n})\r\nexport class StorybookModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook',\r\n  templateUrl: './storybook.component.html',\r\n  styleUrls: ['./storybook.component.scss']\r\n})\r\nexport class StorybookComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4>Tile</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <tile [config]='tileConfig'></tile>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p class=\\\"divider mt-2\\\"></p>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4>Tile with status: success</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <tile [config]='tileConfigWithStatus'></tile>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p class=\\\"divider mt-2\\\"></p>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4>Tile with status: pending</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <tile [config]='tileConfigWithStatusPending'></tile>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p class=\\\"divider mt-2\\\"></p>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4>Tile with badge</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <tile [config]='tileConfigWithBadge'></tile>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p class=\\\"divider mt-2\\\"></p>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tile-consumer',\r\n  templateUrl: './tile-consumer.component.html',\r\n  styleUrls: ['./tile-consumer.component.scss']\r\n})\r\nexport class TileConsumerComponent implements OnInit {\r\n  tileConfig: { heading: string; subHeading: string; };\r\n  tileConfigWithStatusPending: { heading: string; subHeading: string; iconClass: string; };\r\n  tileConfigWithStatus: { heading: string; subHeading: string; iconClass: string; };\r\n  tileConfigWithBadge: { heading: string; subHeading: string; badgeText: string; };\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.tileConfig = {\r\n      heading: 'John robbins',\r\n      subHeading: 'Primary'\r\n    };\r\n    this.tileConfigWithStatus = {\r\n      heading: 'John robbins',\r\n      subHeading: 'Primary',\r\n      iconClass: 'fa-circle success'\r\n    };\r\n    this.tileConfigWithStatusPending = {\r\n      heading: 'John robbins',\r\n      subHeading: 'Primary',\r\n      iconClass: 'fa-circle-o warning'\r\n    };\r\n    this.tileConfigWithBadge = {\r\n      heading: 'John robbins',\r\n      subHeading: 'Primary',\r\n      badgeText: 'Optional'\r\n    };\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"  <div *ngIf=\\\"formlyFieldConfigArrayCollections?.length > 0\\\">\\r\\n    <div *ngFor=\\\"let formlyFieldConfigArray of formlyFieldConfigArrayCollections; let index = index;\\\">\\r\\n      <section [formlyFieldConfigArray]=\\\"formlyFieldConfigArray\\\">\\r\\n      </section>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit, ViewEncapsulation, OnDestroy, ChangeDetectorRef, } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\r\nimport { FormlyFormOptions, FormlyFieldConfig, FormlyConfig } from '@ngx-formly/core';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { fromRootReducers, fromRootActions, fromRootSelectors } from '../store'\r\nimport { QuestionaireDeltaResponse, QuestionaireDeltaError, FormlyFieldConfigArrayCollection, TaskRequest } from '../core/models';\r\nimport { takeWhile } from 'rxjs/operators';\r\nimport { NgxFormlyParserService, QuestionnaireService, ApiService } from '../core/services';\r\nimport { Task } from '../core/models';\r\n@Component({\r\n  selector: 'task-container',\r\n  templateUrl: './task-container.component.html',\r\n  styleUrls: ['./task-container.component.css']\r\n})\r\nexport class TaskContainerComponent implements OnInit, OnDestroy {\r\n\r\n  forms: FormArray = null;\r\n  options: FormlyFormOptions[] = [];\r\n  model: any = {};\r\n  currentTask: Task;\r\n  currentFieldChange: QuestionaireDeltaResponse;\r\n  mergedCurrentTaskWithDelta: Task;\r\n  currentQuestionId: string;\r\n  questionnaireFormErrors: QuestionaireDeltaError[];\r\n  isComponentActive = true;\r\n  requestId: string = null;\r\n taskRequest = new TaskRequest();\r\n\r\n  /////////////////////////////////////////\r\n\r\n  formlyFieldConfigArrayCollections: FormlyFieldConfigArrayCollection[] = [];\r\n\r\n\r\n  constructor(\r\n    private cd: ChangeDetectorRef,\r\n    private store: Store<fromRootReducers.AppState>\r\n  ) {\r\n\r\n    this.store.pipe(select(fromRootSelectors.applicationRequestSelectors.getApplicaiton),\r\n      takeWhile(() => this.isComponentActive))\r\n      .subscribe((application) => {\r\n        if (application && application.id) {\r\n          this.requestId = application.id;\r\n        }\r\n      });\r\n\r\n\r\n    this.store.pipe(select(fromRootSelectors.applicationRequestSelectors.getApplicationActiveTask),\r\n      takeWhile(() => this.isComponentActive))\r\n      .subscribe((activeTask) => {\r\n         this.taskRequest = new TaskRequest();\r\n        this.taskRequest.workflowId = activeTask.workflowId;\r\n        this.taskRequest.taskId = activeTask.task.id;\r\n        this.taskRequest.requestId = this.requestId;\r\n        this.store.dispatch(new fromRootActions.questionnaireActions.GetCurrentTask(this.taskRequest));\r\n      });\r\n\r\n    this.store.pipe(select(fromRootSelectors.questionnaireSelectors.getCurrentTask),\r\n      takeWhile(() => this.isComponentActive)\r\n    ).subscribe(\r\n      (currTask) => {\r\n        if (currTask) {\r\n          this.currentTask = currTask;\r\n          this.store.dispatch(new fromRootActions\r\n            .questionnaireActions\r\n            .GetCurrentQuestionnaireFormlyConfig({ \r\n              task: this.currentTask,\r\n               currentQuestionId: this.currentQuestionId,\r\n               requestId:this.requestId,\r\n               workflowId:this.taskRequest.workflowId,\r\n               taskId:this.taskRequest.taskId\r\n             }));\r\n        }\r\n      }\r\n    );\r\n\r\n    this.store.pipe(select(fromRootSelectors.questionnaireSelectors.getCurrentQuestionnaireConfig),\r\n      takeWhile(() => this.isComponentActive)\r\n    ).subscribe((formlyFieldConfigArrayCollections) => {\r\n      if (formlyFieldConfigArrayCollections) {\r\n        // this.fields = formlyConfig;\r\n        this.formlyFieldConfigArrayCollections = formlyFieldConfigArrayCollections;\r\n        this.forms = new FormArray(this.formlyFieldConfigArrayCollections.map(() => new FormGroup({})));\r\n        this.options = this.formlyFieldConfigArrayCollections.map(() => <FormlyFormOptions>{});\r\n        this.cd.detectChanges();\r\n        //Todo: Show server error changes   \r\n        // if (this.currentFieldChange && this.questionnaireFormErrors) {\r\n        //   this.questionnaireFormErrors.forEach((errorField) => {\r\n        //     this.form.get(errorField.id)\r\n        //       .setErrors({ 'server-error': errorField.errorMessage });\r\n        //     this.form.get(errorField.id).markAsTouched();\r\n\r\n        //   });\r\n        // }\r\n      }\r\n    });\r\n\r\n\r\n    // this.store.pipe(select(fromRootSelectors.questionnaireSelectors.getCurrentQuestionnaireErrors),\r\n    //   takeWhile(() => this.isComponentActive)\r\n    // ).subscribe((questionnaireFormErrors) => {\r\n    //   this.questionnaireFormErrors = questionnaireFormErrors;\r\n    // });\r\n\r\n\r\n    // this.store.pipe(select(fromRootSelectors.questionnaireSelectors.getCurrentQuestionnaireDelta),\r\n    //   takeWhile(() => this.isComponentActive)\r\n    // ).subscribe((fieldChangeDelta) => {\r\n    //   if (fieldChangeDelta) {\r\n    //     this.currentFieldChange = fieldChangeDelta;\r\n    //     this.store.dispatch(new fromRootActions.questionnaireActions.SetQuestionnaireErrors(this.currentFieldChange.errors));\r\n    //     this.store.dispatch(new fromRootActions.questionnaireActions.MergeDeltaFieldChangeAndCurrentTask(\r\n    //       {\r\n    //         currentTask: this.currentTask,\r\n    //         delta: this.currentFieldChange,\r\n    //         model: this.model\r\n    //       }\r\n    //     ));\r\n    //     this.cd.detectChanges();\r\n    //   }\r\n    // });\r\n\r\n    // this.store.pipe(select(fromRootSelectors.questionnaireSelectors.getCurrentQuestionId),\r\n    //   takeWhile(() => this.isComponentActive)\r\n    // ).subscribe((currentQuestionId) => {\r\n    //   if (currentQuestionId) {\r\n    //     this.currentQuestionId = currentQuestionId;\r\n    //   }\r\n    // });\r\n\r\n\r\n\r\n    // this.store.pipe(select(fromRootSelectors.questionnaireSelectors.getMergedCurrentTaskWithDelta),\r\n    //   takeWhile(() => this.isComponentActive)\r\n    // ).subscribe((mergedCurrentTaskWithDelta) => {\r\n    //   if (mergedCurrentTaskWithDelta) {\r\n    //     this.mergedCurrentTaskWithDelta = mergedCurrentTaskWithDelta;\r\n    //     this.store.dispatch(new fromRootActions.questionnaireActions.UpdateCurrentTask(this.mergedCurrentTaskWithDelta));\r\n    //   }\r\n    // });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isComponentActive = false;\r\n    this.store.dispatch(new fromRootActions.questionnaireActions.ResetQuestionnaireState());\r\n\r\n  }\r\n}\r\n\r\n\r\n","export const environment = {\r\n    production: false,\r\n    apiUrl: 'http://mktdevvm100621.nam.nsroot.net:9090/'\r\n  };","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:3000/'\r\n}\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}